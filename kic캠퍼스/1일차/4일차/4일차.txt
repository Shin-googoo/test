CSS3 작성법 및 자바스크립트의 개요, 작성법


<title>1.CSS3에서의 추가된 속성(1).html</title>
  <style>
      div {border:4px solid #aaaaaa;
	        /* border-radius(둥근모서리), box-shadow(그림자효과)   */
             border-radius:50px; /*숫자가 커질수록 모서리의 둥근각도 커진다.*/
			 /* 오른쪽크기,아래쪽크기,흐림정도(번지는 효과커짐),색상 */
			 box-shadow:20px 20px 30px #666666;
             padding:10px; /*테두리와 글자사이의 거리 */
  </style>
 </head>
 <body>
  <div>
     <h1>CSS3에서 스타일을 적용시킬때 브라우저별로 적용이 안되는 경우
	 접두어 ->Chrome,Opera,Safari ->-webkit
	 (-webkit-animation-duration:3s)
	             FireFox ->-moz
				 IE기준 ->-ms</h1>
   <pre>
	 현재 글자                띄어쓰  기
	 줄바꿈
	 게시판의 글내용보기
   </pre>
  </div>
 </body>
</html>

2.CSS3의 추가된 속성(2).html

 <title>2.CSS3의 추가된 속성(2).html</title>
  <style>
      body {
             background:url(../images/bg3.jpg);
			 /*
               background-size:넓이 높이
			   background-size:300px 200px
			 */
			 background-size:50% 50%;
			 background-repeat:no-repeat; /* 반복적으로 이미지 출력 X */
			 padding-top:200px;
	  }
  </style>
======================================
3.CSS3에서의 추가속성(3).html

<title>3.CSS3에서의 추가속성(3).html(Text-Shadow)</title>
  <style>
         /*
            움직이는 거리(왼<-->오),그림자 색상
			animation-duration:작동시간(초)
			animation-name:애니매이션 이름

            ->@-webkit-keyframes 만들고자하는 애니매이션 이름 { 기능 부여 }
         */
        /* 수평(글자와 그림자사이의 거리),수직,흐림정도,그림자 색상                                 */
      h1 {text-shadow:4px 4px 10px #333333;
             -webkit-animation-duration:3s;
			 -webkit-animation-name:slidein;
	       }

		@-webkit-keyframes slidein {
           /*  동작포인트를 지정(오->왼)  */
           from  {     /* 오른쪽을 기준 */
		           margin-left:100%;
				   width:100%;  /* 움직이는 전체 거리 */
		    }
		   to {
		        margin-left:0%;
				width:100%;
		   }
		}
  </style>
 </head>
 <body>
     <h1>Text-Shadow</h1>
	 <p>
         CSS3에서는 text-shadow속성을 이용해서 문자에 그림자효과 부여
		 가능,그림자를 만들때 수평/수직위치,흐림정도,그림자 색상을 지정가능
	 </p>
 </body>
</html>
===========================================
 4.자바스크립트의 특징(4).html

<title> 4.자바스크립트의 특징(4).html</title>
  <style>
     /*  여러줄 주석만 된다.  */
  </style>
 <script>
   /*
   여러줄 주석
   */
   //한줄주석  컴퓨터언어에 맞게 써준 문장(순차문)->써진 순서대로 실행
   //alert("자바스크립트 처음 실행");//사용자한테 주의,경고를 할때 사용하는 대화상자를 보여주는 함수
   //alert("자바스크립트 연습");
   //alert("파일로 만들어서 불러올 수 있다");
 </script>
 </head>
 <body>
  <section>
    <header>자바스크립트 언어</header>
	 <article>
			<ol>
				<li>브라우저에서 실행이 되는언어(html문서와 같이 사용)</li>
				<li>문법에 맞게 내용을 작성(소스파일)->컴파일(컴퓨터가 알아듣는 말로 변환)
				     ->(메모리에 로딩)컴퓨터가 실행(화면에 결과를 보여준다.)</li>
				<li>소스파일->메모리에 바로 올려서 실행한다.(컴파일 과정이 없다.)
				    에러잡기가 어렵다.</li>
			    <li>함수형 언어로 구성(자바->메서드(method))</li>
				<li>플랫폼(운영체제)에 상관없이 다 실행이 된다.</li>
				<li>따로 자바스크립트파일로 만들어서 불러올 수 있다.</li>
			</ol>
		<script src="myScript.js"></script>
	 </article>

  </section>
 </body>
</html>

------------------------------------------------------------------------
5.변수의 개요 및 작성법(2).html

<title>5.변수의 개요 및 작성법(2).html</title>
  <script>
      //형식) var 변수명=저장할값(문자,숫자,논리적인값)
	  //변수명을 작성할때 특수기호는 $,_ 만 되고 나머지는 X
	  //var _name="홍길동";//자바스크립트에서는 '홍길동' 다되는데 String(문자표시)
	  //형식) var 저장할변수명=prompt("사용자에게 알려주는 구문")
	  var name=prompt("당신의 이름을 입력해주세요");//동적으로 입력받을때 사용하는 함수
	  var age=prompt("당신의 나이를 입력?");
	 // var age=23;//int (숫자를 표시) 변수선언(없는 공간을 새로 만드는 경우)
         //  age=24;
	  //alert(name)
	  document.write("body부분에 출력하는 문장<p>");
      document.write("name변수에 저장된 값은 "+name+" "+"입니다.<br>");
	  document.write("당신의 나이는 "+age+"살 이군요! <br>");
  </script>
 </head>
 <body>
   <ol>변수(variable)의 개요 및 특징
      <li>입출력프로그램(입력을 받아서 처리해주는 프로그램)</li>
	  <li>변수->사용자로부터 값을 입력
	       (문자,숫자,논리적인값(참또는 거짓))받아서 저장(메모리에 저장)RAM</li>
	  <li>변수명을 줄때, 대,소문자를 구분(name,Name,NAME)->주로 소문자위주로 선언</li>
	  <li>var 변수명(단어)=저장할값</li>
	  <li>변수의 값은 중간에 값이 변경이 되면 변경된 값이 새로 저장</li>
	  <li>변수이름->영문자+숫자+특수기호를 조합=>숫자로 시작X</li>
	  <li>에러잡기가 어렵다.(=디버깅하기가 어렵다.)->chrom(검사) 디버깅툴</li>
   </ol>
 </body>
</html>

  6.연산자(산술,관계)(3).html

<title>6.연산자(산술,관계)(3).html</title>
  <script>
   /*
    연산자->연산(=계산)을 하기위한 기호
    
	1.산술연산자->+,-,*,/,%(나머지)=>3(계산이 되는 대상자)+5(항)=8(이항연산자)
                      단항산술연산자=>5, -5(음수)(부호)

	2.관계연산자(=비교연산자) >,>=,<,<= (수식비교할때 사용하는 연산자)
	                4>5=>false(거짓)  5>4(true)(참)
					참인지 거짓인지를 알려주는 연산자  5=5(X) 5==5(O),5!=4(같지 않다.)

   */
  </script>
 </head>
 <body>
    <script>
        document.write("산술,관계연산자 <br>");
       /*
         언제 변수를 사용해야 되는지?
          
		  1.입출력 프로그램을 작성하는 경우->변수필요,갯수
		  2.계산할때 ->변수필요
          3.현재 프로그램의 상태를 기억시킬 필요가 있을때
		  =>ex)그림판의 왼쪽버튼의 클릭유무
		    var mouseclick=false;

			if(마우스를 눌렀다면) 그림을 그려라

			순차적으로 실행이 되는데 반복적인 문장이 실행이 되는 경우도 발생
	   */
         //+
		var res=20+30;//수식을 계산한 값을 변수에 저장=>대입한다.
		document.write("res=>"+res+"<br>");//50

		// -
         res=20-30;
		 document.write("res=>"+res+"<br>");//-10

		// *
       res=20*30;
	  document.write("res=>"+res+"<br>");

		//  /
	  res=20%30;
	  document.write("res=>"+res+"<br>");
	 // alert(res)
     //관계연산자
	 /*
	 var a=10;
	 var b=5;*/
	 //변수를 선언할때 var 변수명=값,변수명2=값,변수명3,,,
	 var a=10,b=5;
	 var c=a>b;//계산결과값 true or false
	 alert(c);//계산 중간에 확인용으로 많이 사용
	 //주의할점
	// c=(a==b);//연산자 우선순위때문에 먼저 계산이 되는 대상자에게 (   )
	  c=(5+3)*7;
	 alert(c);

	</script>
 </body>
</html>

=====================================
 7.연산자(대입(=배정),논리연산자)(4).html

<title> 7.연산자(대입(=배정),논리연산자)(4).html</title>
 </head>
 <!--
    대입(=배정)연산자=>= ,+=,-=,*=,/=
	          자기자신의 변수에 값을 더하거나,빼거나, 곱하거나 나눌때 축약해서 표현한 연산자
			  ex) a=b+c
			        var a=2
                    a=a+2=>a+=2;  a=a*2->a*=2
					a=a-2=>a-=2;    a=a/2->a/=2
          컴퓨터의 연산속도가 빨라진다.(산술연산자,대입연산자)=>배정연산자(연산자)

   논리연산자=>참과거짓을 판별할 수 있는 연산자(true or false)
                     and(그리고)   or(또는) 둘중의 하나
					  &&             ||                    !(=not)

				 T   T   T           T                  F
				 T   F   F           T                  F
				 F   T   F           T                  F
				 F   F   F           F                  T
	 
 -->
 <body>
  <script>

       var su1=(2>5) && (5<7) ;// F && T=>F
	   document.write("su1=>"+su1+"<br>");//F

       var su2=(2>5) || (5<7) ;// F || T=>T
	   document.write("su2=>"+su2+"<br>");//T

       document.write("(!su2)=>"+(!su2)+"<p>");//F


       var result=20;
	   //result=result+20;
	   result+=20;
	   document.write("result=>"+result+"<br>");//40

	   //-
       result-=20;
	   document.write("result=>"+result+"<br>");//20

	   //*
       result*=20;//result=result*20;
	   document.write("result=>"+result+"<br>");//400

	   // /
      result/=20;
	   document.write("result=>"+result+"<br>");//20

  </script>
 </body>
</html>
========================================
8.함수의 개요및 작성법(5).html


<title>8.함수의 개요및 작성법(5).html</title>
  <script>
   /* 함수를 작성하는 문장
   
      함수(=function)->어떤 기능을 가진 최소한의 작업단위
	                         (ex 계산기능,저장기능,출력기능,,,)
	                        (프로그램을 작성하기위한 최소한의 작업단위 구성요소)
					ex)프로그램(=회사)==>운영==>사람(직원)(함수)
		
		왜 함수를 작성하는가?
		 단순하고 반복적인 일을 효율적으로 처리하기위해서 작성=>소스코드가 줄여주는 효과
		 //1.매개변수(함수가 해야할 일)         2.반환값(보고 O or X)

		형식) function 함수명(=직원이름)(해야할일(변수),,,,,,){//함수선언
              함수가 처리해야할 일(계산,저장,출력)
        }
   */
     function print(){
       document.write("단순하고	반복적인 일을 주로 담당<br>");
	 }
  </script>
 </head>
 <body>
  <script>
   /* 함수를 호출
      직장상사->직원(업무지시를 내리는 경우)  형식) 함수명();
   */
   print();
   print();
   print();
   print();
  </script>
 </body>
</html>

  예습

*** 함수의 개요
함수의 종류
 (1.매개변수 2.반환값)=>예습
=================>생활코딩

1.매개변수 X  반환값 X
2.매개변수 O  반환값 X
3.매개변수 O  반환값 O
==========================

제어문? 제어문의 종류(if,다중 if문)

함수의 종류->*** alert(),prompt(),confirm()

자바스크립트의 이벤트처리 방법=>함수를 이용

이벤트?

============================








7일차(JQuery의 Ajax를 이용한 DB연동 방법 및 활용)
=============================

04.$.ajax().html

<title>jQuery예제</title>
<!--  getXml.jsp 
<people>
   <person>
      <name>홍길동</name>
      <job>학생</job>
      <age>23</age>
  </person>
  ,,,
 </people>
 -->
<script>
  $(function(){
	  //1.url요청문서 ,2.매개변수를 전달(생략이 가능) {매개변수명:값~} 3.콜백함수(서버의 데이터를 받는역할)
	  $.ajax('getXml.jsp',{
		  //data:~ 매개변수가 없으니깐 생략
		  success:function(data){
			  //분리작업(=파싱분리) parse->find() or filter()
			  $(data).find('person').each(function(){
				  var name='<li>'+$(this).find('name').text()+'</li>'
				  var job='<li>'+$(this).find('job').text()+'</li>'
				  var age='<li>'+$(this).find('age').text()+'</li>'
				  //<div>에 결합해서 화면에 출력
				  $('#output').append('<ul>'+name+job+age+'</ul>')
			  })//each
		  },//success
		  error:function(){
			  alert('서버요청실패');
		  }
	  })//$.ajax
  })
</script>
</head>
<body>
<div id="output">
   <!-- <ul>
       <li>홍길동</li>
       <li>학생</li>
       <li>23</li>
   </ul> -->
</div>
</body>
</html>
===============================================

 xml ->구조가 복잡->불러오는데 불편
          태그가 중첩되면 복잡

***********************************
 json문서->json 표기법으로 구성된 파일이 많이 사용
***********************************

JSON 공식 사이트(http://www.json.org)에서의 JSON 설명
 
                                                       		 특징) 1)
   “JSON(JavaScript Object Notation)는 경량의 데이터 교환 포맷이다.
    ==============================   ----------------------(용량이 적다)
                                                              		  2)컴퓨터가 좋아하는 구조

   인간에게 있어서 읽고 쓰기가 용이하고, 기계에 있어서도 간단하게 파싱이나 생성을 행할 수 있는 형식이다.

   JavaScript 프로그램 언어(ECMA-262 표준 제 3판 1999년 12월)의 일부를 베이스로 만들어져 있다.
   JSON(은)는 완전하게 언어로부터 독립한 텍스트 형식이지만, 
   C,C++,C#,Java,JavaScript,Perl,Python, 그 외 많은 C패밀리의 언어를 사용하는프로그래머에게 있어서는, 
   친숙한규약이 사용되고 있다.이러한 성질이,JSON를 이상적인 데이터 교환 언어로 하고 있다.”
 
 
- JSON 관련 사이트에서 JSON 설명
 
   “영어 그대로 해석하자면 자바스트립트를 객체형식으로 표현하는 것이다.=>JSON의 개요?
                                =======================
    3)
    JSON은 XML보다 빠르고 변환하기도 쉬워 많이 대체해서 쓰고 있다.
    ===================================
    4)
    적은양의 데이터가 송수신 되므로 모바일쪽에서 쓰기에도 부담이 적다.”
    ===================================
    5) 서로 다른 운영체제 끼리에서의 데이터 교환이 자유롭다.
    ===================================

   “JSON은 이종 시스템간 데이터 교환시에 사용할 수 있는 이상적인 방법이다.
    JSON은 자바스크립트에 기반하고 있기 때문에 모든 웹 브라우저에서 호환 된다고 할 수 있다.”

********************
xml의 장점

1.작성하기가 간편하다(tag구조)
2.XML 사람이 읽기가 쉽다. (즉 각 장보들이 의미하는 바를 한눈에 보기가 좋다.
3.DTD 등 XML자체의 기능을 확장할 여지가 많이 있다.

4.파싱 : DOM 또는 SAX 

xml의 단점

1.하나의 데이타를 정의하기 위한 부수적인 정의가 너무 많이 필요하다(치명적 단점)
2. 배열형식이나 반복구조의 경우 불필요한 데이터가 계속 해서 나타난다.==>구조가 복잡
3. 결국 이로 인해 파싱이 힘들어지고 속도는 느려진다.
------------------------------------------------------------------------
JSON의 장점

1.내용이 함축적으로 최소한의 정보만을 가지고있다.
 그렇기 때문에 XML대비 용량이 획기적으로 줄어들고 속도는 그만큼 빨라지게 된다.
**2. 객체구조와 {} 배열구조의 [] 적절한 만남으로 아주 효율적인 데이터 구성이 가능하다. 
**3.파싱이 매우 간편하고, 때로는 일반적인 변수처럼 사용도 가능하다. 즉, 사용하기 쉽다. 

JSON의 단점

1.내용이 함축적이다 보니 내용의 의미파악은 힘들수 있다.
                          --------------------------------- 
2.아무래도 적은 규격의 데이터 전송에 적합한 방식이기떄문에 XML보다는 빠르지만, 
   대용량급의 데이터 송수신엔 부적합 모습도 있다. =>모바일에 최적화

***3.JSONP : URL을 통해서 Get 방식 (약 2KB 용량 제한) ->요청,전송이 가능->Angular에서 사용
======================================================
 05.json.html

<script>
   //Json표기법=>키명:저장할값(숫자,문자열,논리적인값,객체,배열(객체묶음))
   var myjson={
		   "name":"홍길동", /* key:value */
		   "sung":"남자",
		   "func":"function(){alert('test')}" /* 함수정의 문자형태로 저장 */
   }
   
  var myjson2={"number":123} /* 객체명.키명(읽기) <->객체명.키명=값(저장) */
  var myjson3={"temp":true}
  //배열구조
  var myjson4={"temp":["aaa","bbb","ccc"]} /* [] 배열 표시 */
  var mem={name:'홍길동',fColor:['파랑','녹색','빨강']}
  
  function print1(){
	  var msg=mem.name+"님이 좋아하는 색깔은 전체"+mem.fColor.length+"개이고,"
	        msg+="그 중에서 제일 좋아하는 색깔은 "+mem.fColor[1]+"입니다."
	       alert(msg)
  }
</script>
</head>
<body>
<input type="button"  value="test" onclick="print1()">
<input type="button"  value="이름 변경" 
          onclick="myjson.name='테스트';alert(myjson.name)">
         <!-- 
            eval()함수=>문자열로 되어있는 자바스크립트문자->자바스크립트 코드로 변환
           ex) "var re"+"sult=123"
                 =>eval("var re"+"sult=123")=>var result=123
                  a=function(){alert('test')}  a()->alert('test')
          -->
<input type="button"  value="함수호출"
          onclick="alert(myjson.func);eval('a='+myjson.func); a()">
</body>
</html>
=================================================
06.$.ajax().json.html
==============
<script>
  $(function(){
	  $.ajax({
		  url:'item2.json', /* 요청문서 url속성명 */
		  dataType:'json', /* dataType:문성종류 */
		  success:function(data){
			  //분리작업:파싱
			  $('#treeData').append('<tr><td>id</td>'+'<td>name+</td>'
					                            +'<td>price</td>'+'<td>description</td></tr>')
				//불러올데이터가 태그덩어리->$(선택자).each(~) =>$(this)	
				//불러올 데이터가 태그X->$.each(컬렉션객체(배열),호출해서 처리할 함수명 or 익명함수) ->this
			  $.each(data,function(){
				  $('#treeData').append('<tr><td>'+this.id+'</td><td>'
						                            +this.name+'</td><td>'
						                            +this.price+'</td><td>'
						                            +this.description+'</td></tr>')
			  })//.each
		  }//success
	  })//$.ajax
  })
</script>
================================================
 save as 07.$.getJson().html

 /* (1)
	  $.ajax({
		  url:'item2.json',
		  dataType:'json', 
		  success:function(data){ */
		  //(2)$.getJSON('경로포함해서 불러올 파일명(사이트 주소)',불러와서 처리할 function(매개변수명){}
		     $.getJSON('item2.json',function(data){
			  //분리작업:파싱
			  $('#treeData').append('<tr><td>id</td>'+'<td>name+</td>'
					                            +'<td>price</td>'+'<td>description</td></tr>')
				//불러올데이터가 태그덩어리->$(선택자).each(~) =>$(this)	
				//불러올 데이터가 태그X->$.each(컬렉션객체(배열),호출해서 처리할 함수명 or 익명함수) ->this
			  $.each(data,function(){
				  $('#treeData').append('<tr><td>'+this.id+'</td><td>'
						                            +this.name+'</td><td>'
						                            +this.price+'</td><td>'
						                            +this.description+'</td></tr>')
			  })//.each
	  })//$.getJSON
  })
==================================================
 openAPI 사용방법

http://api.flickr.com/services/feeds/photos_public.gne?tags=raccoon&tagmode=any&format=json&jsoncallback=?

"https://live.staticflickr.com/65535/52663546079_4349bdcae1_m.jpg
<!--  
         "title": "Recent Uploads tagged raccoon",
		"link": "http:\/\/www.flickr.com\/photos\/tags\/raccoon\/",
		"description": "",
		"modified": "2019-03-17T19:43:03Z",
		"generator": "http:\/\/www.flickr.com",
		"items": [
	   {
			"title": "Lost \u2601\ufe0f",
			"link": "http:\/\/www.flickr.com\/photos\/pure_embers\/32463827727\/",
			"media": {"m":"http:\/\/farm8.staticflickr.com\/7847\/32463827727_92fe9aa458_m.jpg"},
			"date_taken": "2019-03-15T02:42:29-08:00",
			"description": " <p><a href=\"http:\/\/www.flickr.com\/people\/pure_embers\/\">pure_embers<\/a> posted a photo:<\/p> <p><a href=\"http:\/\/www.flickr.com\/photos\/pure_embers\/32463827727\/\" title=\"Lost \u2601\ufe0f\"><img src=\"http:\/\/farm8.staticflickr.com\/7847\/32463827727_92fe9aa458_m.jpg\" width=\"240\" height=\"235\" alt=\"Lost \u2601\ufe0f\" \/><\/a><\/p> <p>Vincent and Rackety got a little bit lost in the fog... they stopped to look around and work out the best way home but it was all whiteness &lt;3 <br \/> <br \/> ~<br \/> Circus bear by LindseyThomasMakes, raccoon by ZozoZolala<\/p>",
			"published": "2019-03-17T19:43:03Z",
			"author": "nobody@flickr.com (\"pure_embers\")",
			"author_id": "63432462@N03",
			"tags": "pure embers laura uk pureembers photography kitty teddy circus bear tricycle woods art lindsey thomas makes raccoon zozo zolala needlefelted fog lost"
	   },
      ,,,
-->
 08.$.getJSON().site.html

<script>
  $(function(){
	  $.getJSON("http://api.flickr.com/services/feeds/photos_public.gne?"
			          +"tags=raccoon&tagmode=any&format=json&jsoncallback=?",
			        function(data){
		  //태그X $.each(1.컬렉션객체(배열)(items항목만),2.function(인덱스번호,항목(item)))
		  $.each(data.items,function(i,item){
			  //<img src="경로포함해서 불러올 파일명">
			  $("<img>").attr("src",item.media.m).appendTo("#images");
			  //전체의 이미지중에서 0~4인덱스에 해당하는 이미지만 불러오기
			  /*
			    if(i==4)
			    	return false; */
			   if(i%2==1)  /* 인덱스가 1이 되면 더이상 불러오기 금지 */
				   return false;
		     })//$.each
	    })//function(data)
  })
</script>
====================================================
** 테이블에 저장된 데이터를 가져와서 json 표기법형태로 출력하시오 **

09.getBoardJson.jsp

<%@ page language="java" contentType="text/html; charset=UTF-8"
    pageEncoding="UTF-8"
    import="java.sql.*,lys.board.*" %>
[
  <%
      Connection con=null;
      PreparedStatement pstmt=null;
      ResultSet rs=null;
      DBConnectionMgr pool=null;
      String sql="";
  
      try{
    	  pool=DBConnectionMgr.getInstance();
    	  con=pool.getConnection();
    	  sql="select * from board order by num asc";
    	  pstmt=con.prepareStatement(sql);
    	  rs=pstmt.executeQuery();
    	  while(rs.next()){
    		  //[{num:1,writer:'홍길동',~},{num:2~]
    		  int num=rs.getInt("num");
    		  String writer=rs.getString("writer");
    		  String subject=rs.getString("subject");
    		  String content=rs.getString("content");
    		  if(rs.getRow() > 1){ //한개이상이라면
    			  out.print(",");
    		  }%>
    		{
    		  "num":<%=num%>,<br>
    		  "writer":<%=writer %>,<br>
    		  "subject":<%=subject %>,<br>
    		  "content":<%=content %><br>
    		}  
   <% 
    	  } //while
      }catch(Exception e){
    	  out.println("getBoardJson.jsp에 에러유발=>"+e);
      }finally{
    	  pool.freeConnection(con, pstmt, rs);
      }
  %>
]
========================================
07,$.getJSon().html을 save as 10.$.get().html
















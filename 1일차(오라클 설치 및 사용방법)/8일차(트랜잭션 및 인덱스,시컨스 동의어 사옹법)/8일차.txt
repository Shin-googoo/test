8일차(트랜잭션 및 인덱스,시컨스 동의어 사용법)

spool c:\webtest\2.db\print\20221124.txt =>백업


** 트랜잭션(transaction) **

  개요
                                                select -> DQL
 데이터베이스에서 데이터를 관리할때 (insert,update,delete) - DML
 여러개의 SQL명령어를 사용하게 되는데 이를 하나의 작업단위로
  설정한다.                                         ========

 작업단위->어디서 부터 시작 언제까지 끝나는가?(기준)

 계좌이체

     A(신한)------------------->B(국민)
     -10000------------------->+10000
 
  조건->All(실행이 되면 끝까지 실행) or
          Nothing (실행하지 말든지)(원자성)

1) 내계좌 -10000--->하나의 작업
2) 상대방 +10000-->하나의 작업
 ,,,,

COMMIT ->정상적으로 작업이 끝났음을 의미

모든 작업들을 정상적으로 처리
데이터베이스에 모두 반영 =>작업한 내용(insert,update,delete)
                                   테이블에 저장
변경된 내용을 모두 영구 저장 =>테이블에 저장
                        (중간에 값을 변경하지 않는한 영구저장)


(주의할점)
자동 commit 

1.create~, alter~, drop~으로 시작하는 문장(DDL문) 복구불가
   DCL문(grant,revoke) 사용권한

  DML문은 복구가능->예외 commit 명령어를 사용하기전 까지

 exit=>자동으로 commit으로 생각
           모든 작업=>테이블에 저장하고 종료
-----------------------------------------------------------

10g ->한번의 복구(flashback 기술 제공)
---------------------------------------------------------

ROLLBACK =>아직 끝나지 않은 작업에 대해서 취소

처리 과정에서 발생한 변경 사항을 취소
이전의 상태로 되돌린다. =>처음부터 실행하지 않은 상태로 간주
 DML만 가능 (예외 commit을 하기전까지)

**자동 rollback **

비정상적인 종료(정전),컴퓨터 다운=>자동 rollback 이 일어난다.
==================================
 창1

sql>create table b_dept2 
      as select * from dept;  //commit이 된 상태
                                         트랜잭션이 종료된 상태

sql>select * from b_dept2;

    DEPTNO DNAME          LOC
---------- -------------- -------------
        10 ACCOUNTING     NEW YORK
        20 RESEARCH       DALLAS
        30 SALES          CHICAGO
        40 OPERATIONS     BOSTON

sql>insert into b_dept2 values(50,'SUPPORT','KWANGJU');

sql>select * from b_dept2;

1 개의 행이 만들어졌습니다.

SQL> select * from b_dept2;

    DEPTNO DNAME          LOC
---------- -------------- -------------
        10 ACCOUNTING     NEW YORK
        20 RESEARCH       DALLAS
        30 SALES          CHICAGO
        40 OPERATIONS     BOSTON
        50 SUPPORT        KWANGJU


SQL> commit; //실질적으로 메모리에 저장된 데이터->테이블에 저장

커밋이 완료되었습니다.

창2

SQL> select * from b_dept2;

    DEPTNO DNAME          LOC
---------- -------------- -------------
        10 ACCOUNTING     NEW YORK
        20 RESEARCH       DALLAS
        30 SALES          CHICAGO
        40 OPERATIONS     BOSTON   //->커밋되기전 작업

SQL> /
                                                  b_dept2;
    DEPTNO DNAME          LOC
---------- -------------- -------------
        10 ACCOUNTING     NEW YORK
        20 RESEARCH       DALLAS
        30 SALES          CHICAGO
        40 OPERATIONS     BOSTON
        50 SUPPORT        KWANGJU

--------------------------------------------
트랜잭션작업 중간에 savpoint를 지정이 가능하다.
          (책갈피 처럼 생각) 이름을 부여 작업

<문2>rollback 실습
sql> update b_dept2 set dname='TEST',loc='SUWON'
       where deptno=50;

1 행이 갱신되었습니다.

SQL> select * from b_dept2;

    DEPTNO DNAME          LOC
---------- -------------- -------------
        10 ACCOUNTING     NEW YORK
        20 RESEARCH       DALLAS
        30 SALES          CHICAGO
        40 OPERATIONS     BOSTON
        50 TEST           SUWON

SQL> rollback;

롤백이 완료되었습니다.

SQL> select * from b_dept2;

    DEPTNO DNAME          LOC
---------- -------------- -------------
        10 ACCOUNTING     NEW YORK
        20 RESEARCH       DALLAS
        30 SALES          CHICAGO
        40 OPERATIONS     BOSTON
        50 SUPPORT        KWANGJU

SQL>   
<문3> 시나리오 트랜잭션 =>ppt에서 또 다른 실습?
  select ->해당 사항X
----------------------------------------
  insert
  ------------->savepoint 별칭(A)
  update
  ------------>savepoint 별칭(B)
  delete

  rollback->insert,update,delete 전부 복구
  rollback to 별칭A ->update,delete 복구
  rollback to 별칭B ->delete만 복구
-----------------------------------------------
 insert into b_dept2 values(60,'TESTING','SEOUL');

SQL> select * from b_dept2;

    DEPTNO DNAME          LOC
---------- -------------- -------------
        10 ACCOUNTING     NEW YORK
        20 RESEARCH       DALLAS
        30 SALES          CHICAGO
        40 OPERATIONS     BOSTON
        50 SUPPORT        KWANGJU
        60 TESTING        SEOUL         <---insert

6 개의 행이 선택되었습니다.

형식)savepoint 별칭명;
sql>savepoint A;
           
저장점이 생성되었습니다.

update =>부서번호 50번을 'IMSI', loc='BUSAN'로 수정

sql>update b_dept2 set dname='IMSI',loc='BUSAN'
      where deptno=50;

1 행이 갱신되었습니다.

sql>savepoint B;
저장점이 생성되었습니다.

sql>select * from b_dept2

    DEPTNO DNAME          LOC
---------- -------------- -------------
        10 ACCOUNTING     NEW YORK
        20 RESEARCH       DALLAS
        30 SALES          CHICAGO
        40 OPERATIONS     BOSTON
        50 IMSI           BUSAN
        60 TESTING        SEOUL

6 개의 행이 선택되었습니다.

3) 40번 부서의 삭제?
 sql>delete from b_dept2 where deptno=40;

1 행이 삭제되었습니다.

SQL> select * from b_dept2;

    DEPTNO DNAME          LOC
---------- -------------- -------------
        10 ACCOUNTING     NEW YORK
        20 RESEARCH       DALLAS
        30 SALES          CHICAGO
                                            =>delete
        50 IMSI           BUSAN =>update
        60 TESTING        SEOUL =>insert

  rollback->insert,update,delete 전부 복구
  rollback to 별칭A ->update,delete 복구
  rollback to 별칭B ->delete만 복구

sql>rollback to B;

롤백이 완료되었습니다.

SQL> select * from b_dept2;

    DEPTNO DNAME          LOC
---------- -------------- -------------
        10 ACCOUNTING     NEW YORK
        20 RESEARCH       DALLAS
        30 SALES          CHICAGO
        40 OPERATIONS     BOSTON =>삭제만 복구
        50 IMSI           BUSAN
        60 TESTING        SEOUL

6 개의 행이 선택되었습니다

sql>rollback to A;

롤백이 완료되었습니다.

SQL> select * from b_dept2;

    DEPTNO DNAME          LOC
---------- -------------- -------------
        10 ACCOUNTING     NEW YORK
        20 RESEARCH       DALLAS
        30 SALES          CHICAGO
        40 OPERATIONS     BOSTON
        50 SUPPORT        KWANGJU =>update 복구(전)
        60 TESTING        SEOUL

6 개의 행이 선택되었습니다.

sql> rollback;

롤백이 완료되었습니다.

SQL> select * from b_dept2;

    DEPTNO DNAME          LOC
---------- -------------- -------------
        10 ACCOUNTING     NEW YORK
        20 RESEARCH       DALLAS
        30 SALES          CHICAGO
        40 OPERATIONS     BOSTON
        50 SUPPORT        KWANGJU
        =>60번 데이터가 입력되기전으로 복구

sql>show autocommit
SQL> show autocommit
autocommit OFF  =>rollback을 사용할 수 있도록 만들어져있다.

SQL>
---------------------------------------------------------------
 테이블,뷰,트랜잭션=>**인덱스,시컨스,** 동의어(Synonym)=>사용권한**

**인덱스(index) ->책갈피와 역할(자주 사용이 되는 컬럼에 부여)
                     자주 검색이 되는 필드에 부여(검색목적) =>where조건식

         ->인덱스가 부여된 필드 먼저 찾아준다.->빠르게 찾기위해서(목적)
                  ->데이터 저장공간이 따로 필요하다.

primary key(기본키)=>not null+unique키가 부여
                                            --------unique index가 자동부여
**인덱스 종류

1.unique index키 ->자동으로 pk생성->자동 부여
**********************************************************************
2.non-unique index키->중복을 허용해주는 필드에 부여
                               자주 검색이 되는 필드
                               직책(job) 검색,성별검색, 이름검색,상품검색

***********************************************************************
** 주의할점 **

 수정이 자주 되는 필드에 인덱스부여X (A~Z)
                          ㄱ~ㅎ =>데이터가 변경->재정렬되기 때문에
                                                        ->속도가 느려지는 원인
                                                                              
**********************************************************************
   =>자주 검색이 되면서 자주 변경이 안되는 데이터 중심으로
       인덱스를 부여(이름 검색)
**********************************************************************
<문4>                                            규칙
형식) create [unique] index 인덱스명(테이블명_필드명_idx)
       on 적용테이블명(필드명)
      ~on 적영테이블명(필드명1,필드명2)->복합키(테이블 설계 문제)
                                                              정규화
sql>b_emp5

  create table b_emp5 as select * from emp; //없는분

sql>create index b_emp5_ename_idx on b_emp5(ename);
인덱스가 생성되었습니다

<문5> 
제약조건->user_constraints, 뷰->user_views
인덱스? ->user_indexes(i)(uniquness필드), =>인덱스이름,고유의정보
             user_ind_columns(c)=>인덱스이름,테이블,필드명

             =>index_name(인덱스이름)

sql>select c.index_name,c.column_name,c.column_position,
       i.uniqueness from user_indexes i, user_ind_columns c
      where c.index_name=i.index_name and c.table_name=upper('&table_name');

 =>동적으로 입력을 받는 경우에는 파일로 저장할것.
--------------------------------------------------------------------------------
sql>save c:\webtest\2.db\print\ind_search.txt

file c:\webtest\2.db\print\ind_search.txt(이)가 생성되었습니 다
SQL> @ c:\webtest\2.db\print\ind_search.txt  =>history를 이용(방향키 이용)
table_name의 값을 입력하십시오: b_emp5
구   3:       where c.index_name=i.index_name and c.table_name=upper('&table_name')
신   3:       where c.index_name=i.index_name and c.table_name=upper('b_emp5')

INDEX_NAME
------------------------------
COLUMN_NAME
--------------------------------------------------------------------------------
COLUMN_POSITION UNIQUENES
--------------- ---------
B_EMP5_ENAME_IDX
ENAME
              1 NONUNIQUE =>중복을 허용해주는 인덱스

SQL>
<문6>인덱스를 삭제->형식) drop index 삭제시킬 인덱스이름
sql>drop index b_emp5_ename_idx;
인덱스가 삭제되었습니다.

---------------------------------------------------------
                              pk
시컨스(sequence)=>특정필드에 연결시켜서 데이터를 입력할때
                                                      =========insert into 할때
                 자동적으로 지정한 번호를 넣어주는 역할을 하는 오라클 객체
               =>중복이 되면 안되는 필드(=>primary key에 해당하는 필드)
  
<->rownum(화면에 출력할때 레코드 앞에 번호를 부여(구분하기위해서))

            dept->deptno 10,20,30,40,50,60,70,80(중복X 유일한값)=>자동

형식)

CREATE SEQUENCE sequence_name (시컨스이름=>테이블명_필드명)
[START WITH n] ① ->시작번호 (10)
[INCREMENT BY n] ② ->증가치 (2)  10,12,14,16,18,20
[{MAXVALUE n | NOMAXVALUE}] ③  최대값 | NOMAXVALUE(무제한)
[{MINVALUE n | NOMINVALUE}] ④  최소값  | 최소값 설정
[{CYCLE | NOCYCLE}] ⑤ 순환유무(최대값->다시 처음부터 시작~)
[{CACHE n | NOCACHE}] ⑥  메모리 저장 유무


ex)CREATE SEQUENCE sequence_name; //1,2,3,4,5,,,,,
                                                            10 20 30 
                                                            100
<문7>시컨스 생성
sql> create sequence b_emp5_empno;
시퀀스가 생성되었습니다.  =>default 적용  (1(시작값),1(증가치)

sql> create sequence b_dept2_deptno;//1,2,3,4,,,

시퀀스가 생성되었습니다.

***********시컨스 속성 2가지*********************************
            시컨스명.속성명(currval or nextval)

1.currval:현재값을 반환(현재 설정된값을 확인)
->nextval를 통해서 저장된 값을 확인
2.nextval:현재 지정된 시컨스값의 다음값을 반환(확인)
->새로운 값을 저장시킬때 사용
                                                                     중복되지 않게

********************************************************
sql>select b_dept2_deptno.currval from dual;

select b_dept2_deptno.currval from dual 
//시컨스에 설정된 값을 알려주세요
       *                                       
변수(데이터 저장공간)=>저장된값이 없다는 표시
1행에 오류:
ORA-08002: 시퀀스 B_DEPT2_DEPTNO.CURRVAL은 이 세션에서는 정의 되어 있지 않습니다

생성되고 맨처음에는 CURRVAL은 값 저장X
맨처음 NEXTVAL로 값을 저장시켜야 그제서야
CURRVAL에 값이 저장되고 사용할 수가 있다.

시컨스생성->currval 확인X (=현재 설정된 값)
                nextval ->중복되지 않게 값을 만들어서 넣어주는 역할
***********************************************************
sql>select  b_dept2_deptno.nextval from dual;
SQL> select  b_dept2_deptno.nextval from dual;

   NEXTVAL
----------
         1

SQL> select b_dept2_deptno.currval from dual;

   CURRVAL          ->  NEXTVAL 먼저 줘야 CURRVAL 줄수 있다.
----------
         1

SQL> select b_dept2.nextval from dual;
select b_dept2.nextval from dual
       *
1행에 오류:
ORA-02289: 시퀀스가 존재하지 않습니다.=>오타


SQL> select b_dept2_deptno.currval from dual;

   CURRVAL
----------
         1

SQL> select b_dept2_deptno.nextval from dual;

   NEXTVAL
----------
         2

SQL> select b_dept2_deptno.currval from dual;

   CURRVAL
----------
         2

SQL>

<문8>새롭게 시컨스를 만들어서 테이블에 적용시켜보자.
         select * from b_dept2;

    DEPTNO DNAME          LOC
---------- -------------- -------------
        10 ACCOUNTING     NEW YORK
        20 RESEARCH       DALLAS
        30 SALES          CHICAGO
        40 OPERATIONS     BOSTON
        50 SUPPORT        KWANGJU
       
         insert 60,70,시작값 60, 증가치 10

sql>create sequence b_dept2_deptno2
      start with 60
      increment by 10
      maxvalue 10000
      nocycle
      nocache;
-----------------------------------------------------
      
         50 SUPPORT        KWANGJU

sql>
insert into b_dept2 value(b_dept2_deptno2.nextval,'TESTING','SEOUL');
      
1 개의 행이 만들어졌습니다.

SQL> select * from b_dept2;

    DEPTNO DNAME          LOC
---------- -------------- -------------
        10 ACCOUNTING     NEW YORK
        20 RESEARCH       DALLAS
        30 SALES          CHICAGO
        40 OPERATIONS     BOSTON
        50 SUPPORT        KWANGJU
        60 TESTING        SEOUL  -> 시퀀스.nextval을 사용

6 개의 행이 선택되었습니다.

   insert into b_dept2 values(b_dept2_deptno2.nextval,'TESTING2','BUSAN');
pk에 해당되는 필드에 대신 데이터를 넣어준다                

1 개의 행이 만들어졌습니다.

SQL> select * from b_dept2;

    DEPTNO DNAME          LOC
---------- -------------- -------------
        10 ACCOUNTING     NEW YORK
        20 RESEARCH       DALLAS
        30 SALES          CHICAGO
        40 OPERATIONS     BOSTON
        50 SUPPORT        KWANGJU
        60 TESTING        SEOUL
        70 TESTING2       BUSAN

7 개의 행이 선택되었습니다.
-----------------------------------------------------------------------
 치명적인 단점->시컨스  b_dept2              b_dept3
                                80                        100
                                90
                               110
--------------------------------------------------
하나의 테이블에 작성-> 다른테이블에 또 작성 중간에 번호가 사라진다.
                                             250
                 중간에 번호가 사라진다. 250
                                                249
                                                300
                                                500 -> 숫자가 맘대로 널뛰기
  1 ㅁㅁㅁㅁ
  2. ㅁㅁㅁㅁ
  3
  4=> select max(deptno) from 테이블 =>웹에서 사용(JSP)
                       3------------------------->3+1=4(최대값+1)

<문9> 
시컨스->시스템 테이블에 저장 
=>user_sequences에 저장=>뷰를 이용해서 조회(v_sequence_seq)
          desc user_sequences                                            
  
이름                                      널?      유형
 ----------------------------------------- -------- ----------------------------
 SEQUENCE_NAME  (시컨스명)                           NOT NULL VARCHAR2(30)
 MIN_VALUE (최소값)                                          NUMBER
 MAX_VALUE (최대값)                                         NUMBER
 INCREMENT_BY (증가값)                             NOT NULL NUMBER
 CYCLE_FLAG                                         VARCHAR2(1)
 ORDER_FLAG                                         VARCHAR2(1)
 CACHE_SIZE                                NOT NULL NUMBER
 LAST_NUMBER (현재 저장된 마지막값)                              NOT NULL NUMBER

sql>create view v_sequence_seq
      as
      select       sequence_name,min_value,
      max_value,increment_by,last_number
      from user_sequences;

sql>select * from v_sequence_seq

SEQUENCE_NAME                   MIN_VALUE  MAX_VALUE INCREMENT_BY LAST_NUMBER
------------------------------ ---------- ---------- ------------ -----------
B_DEPT2_DEPTNO                          1 1.0000E+28         1          21
B_DEPT2_DEPTNO2                         1      10000           10       80
B_EMP5_EMPNO                            1 1.0000E+28         1           1

<문10> 시컨스 수정=>시컨스 생성과 형식이 거의 같다.

alter SEQUENCE 변경시킬sequence_name(시컨스이름=>테이블명_필드명)
[START WITH n] ① ->시작번호 (10)
[INCREMENT BY n] ② ->증가치 (2)  10,12,14,16,18,20
[{MAXVALUE n | NOMAXVALUE}] ③  최대값 | NOMAXVALUE(무제한)
[{MINVALUE n | NOMINVALUE}] ④  최소값  | 최소값 설정
[{CYCLE | NOCYCLE}] ⑤ 순환유무(최대값->다시 처음부터 시작~)
[{CACHE n | NOCACHE}] ⑥  메모리 저장 유무

 수정시 주의할점
-----------------------------------------------------------------------------
sql>alter sequence b_dept2_deptno2
      increment by 2
      maxvalue 23
      minvalue 1
      nocycle
      nocache;

SQL> alter sequence b_dept2_deptno2
  2        increment by 2
  3        maxvalue 23=>현재값 80(모순)=>항상 최대값보다 적어야 된다.
  4        minvalue 1
  5        nocycle
  6        nocache;
alter sequence b_dept2_deptno2
*
1행에 오류:
ORA-04009: MAXVALUE 에 현재치보다 작은 값을 지정할 수 없습니다

<문11>시컨스를 삭제 ->drop sequence 삭제시킬 시컨스명
sql>
drop sequence b_dept2_deptno2; //삭제=>시스템테이블에서도 삭제

select * from v_sequence_seq;

SEQUENCE_NAME                   MIN_VALUE  MAX_VALUE INCREMENT_BY LAST_NUMBER
------------------------------ ---------- ---------- ------------ -----------
B_DEPT2_DEPTNO                          1 1.0000E+28            1          21
B_EMP5_EMPNO                            1 1.0000E+28            1           1

**************************************************************
정리->숫자데이터 중에서 중복되지 않게 숫자데이터를 순차적으로 저장시킬때 사용하는 오라클 객체
**************************************************************
<문11> 
 select * from tab;//테이블의 별칭(=동의어)(Synonym(시노님))개요,사용->사용권한
                    ->단어는 다르지만 의미가 같은것(별칭,별명(사람))
                    ->테이블에 부여(테이블은 하나인데====>이름이 2개)
                                        dept-------------->백업테이블(X)

create view, create synonym

형식) create synonym 동의어이름 for 대상객체명(=테이블명)
sql>create synonym buser for b_dept2;

동의어가 생성되었습니다.

SQL> select * from tab;  //SQL (DQL)

TNAME                          TABTYPE  CLUSTERID
------------------------------ ------- ----------
BONUS                          TABLE
==============================
BUSER                          SYNONYM -> 개인 동의어
==============================
B_DEPT2                        TABLE
B_EMP2                         TABLE
B_EMP3                         TABLE

sql>select * from b_dept2;

    DEPTNO DNAME          LOC
---------- -------------- -------------
        10 ACCOUNTING     NEW YORK
        20 RESEARCH       DALLAS
        30 SALES          CHICAGO
        40 OPERATIONS     BOSTON
        50 SUPPORT        KWANGJU
        60 TESTING        SEOUL
        70 TESTING2       BUSAN

7 개의 행이 선택되었습니다.

sql>select * from buser;  //테이블의 또 다른 이름

    DEPTNO DNAME          LOC
---------- -------------- -------------
        10 ACCOUNTING     NEW YORK
        20 RESEARCH       DALLAS
        30 SALES          CHICAGO
        40 OPERATIONS     BOSTON
        50 SUPPORT        KWANGJU
        60 TESTING        SEOUL
        70 TESTING2       BUSAN

7 개의 행이 선택되었습니다.

                           b_dept2-------------->buser(동의어)(테이블이 연결)
                                80                       80
                           b_dept2--------------->b_dept22(백업)  
                                80                       80(X)

sql>insert into buser values(80,'TESTING3','TEST');

1 개의 행이 만들어졌습니다.

SQL> select * from b_dept2;

    DEPTNO DNAME          LOC
---------- -------------- -------------
        10 ACCOUNTING     NEW YORK
        20 RESEARCH       DALLAS
        30 SALES          CHICAGO
        40 OPERATIONS     BOSTON
        50 SUPPORT        KWANGJU
        60 TESTING        SEOUL
        70 TESTING2       BUSAN
        80 TESTING3       TEST=>같은 테이블임을 알 수 가 있다.

8 개의 행이 선택되었습니다.

<문12>동의어를 왜 만드는가? ->사용권한과 연관이 있다.
                                         (DCL문) -> Data Control Language

  계정별로 관리->속한 테이블만 사용이 가능하다.
     test ----------------------->scott
                                       b_emp5, b_dept2,,,
                                      (insert,update,delete,select)

 서로 다른 계정에서의 특정 계정의 테이블을 사용? yes (허락을 받아야함)

** 동의어의 종류 **

1.개인용(private synonym)->각 계정별로 따로따로 필요에 따라서
                                     만드는 경우(자기 계정만 사용이 가능)

2.공용(public synonym)->관리자만 만드는 경우 -select * from tab;
                                 모든 계정들이 사용할 수 있는 동의어를
                                 만드는 경우

----------------------------------------------------------------
시나리오=>test===>scott계정 b_dept2(insert,select)

sql>show user=>Scott

sql>conn test/t1234

SQL> conn test/t1234
연결되었습니다.
SQL> select * from b_dept2;
select * from b_dept2
              *
1행에 오류:
ORA-00942: 테이블 또는 뷰가 존재하지 않습니다

 사용권한->사용하고자하는 테이블의 주인(소유자)에게 허락을 받는 것
 DCL             (인증)
           권한주기       ->grant
           권한회수(몰수)->revoke
=================================
sql>conn scott/tiger

      객체권한 -> 소유자가 특정계정에게 부여하는 것.

DCL->형식) grant 권한종류,,,(all) on 적용테이블명 to 계정명1,,,
                    insert,update,delete,select           to public
                                                                (모든 계정)
sql>grant insert,select on b_dept2 to test; //통보
------------------------------------------------

sql>conn test/t1234

sql>select * from b_dept2;

SQL> select * from b_dept2; //소유자명.테이블명=>사용권한이 있어도
select * from b_dept2         //소유자명.테이블명=>사용가능(ㅇ)
              *
1행에 오류:
ORA-00942: 테이블 또는 뷰가 존재하지 않습니다

SQL> select * from scott.b_dept2;
                         소유자           ======>내것처럼 편하게 
                                                          이름을 붙여서 사용
                                                          (동의어)
    DEPTNO DNAME          LOC
---------- -------------- -------------
        10 ACCOUNTING     NEW YORK
        20 RESEARCH       DALLAS
        30 SALES          CHICAGO
        40 OPERATIONS     BOSTON
        50 SUPPORT        KWANGJU
        60 TESTING        SEOUL
        70 TESTING2       BUSAN
        80 TESTING3       TEST

8 개의 행이 선택되었습니다.

   scott.b_dept2==>buser2 이름을 내것처럼 사용

sql>create synonym buser2 for scott.b_dept2;

SQL> create synonym buser2 for scott.b_dept2;

동의어가 생성되었습니다.

SQL> select * from buser2;

    DEPTNO DNAME          LOC
---------- -------------- -------------
        10 ACCOUNTING     NEW YORK
        20 RESEARCH       DALLAS
        30 SALES          CHICAGO
        40 OPERATIONS     BOSTON
        50 SUPPORT        KWANGJU
        60 TESTING        SEOUL
        70 TESTING2       BUSAN
        80 TESTING3       TEST

8 개의 행이 선택되었습니다.
-------------------------------------------
sql>insert into buser2 values(90,'TESTING4','TEST2');

1 개의 행이 만들어졌습니다.

SQL> select * from buser2;

    DEPTNO DNAME          LOC
---------- -------------- -------------
        10 ACCOUNTING     NEW YORK
        20 RESEARCH       DALLAS
        30 SALES          CHICAGO
        40 OPERATIONS     BOSTON
        50 SUPPORT        KWANGJU
        60 TESTING        SEOUL
        70 TESTING2       BUSAN
        80 TESTING3       TEST
        90 TESTING4       TEST2

9 개의 행이 선택되었습니다.
**********************************************************
동의어를 사용하는 목적
=> 다른 계정이 소유한 테이블을 데이터 작업(DML)을 할때 
소유자자명.테이블명
=>자기만의 이름으로 변경해서 사용하고자 할때 사용하는 오라클 객체
*******************************************************************
<문13>
공용 동의어 - 관리자가 만들어주는 경우
(모든 계정이 다 사용 가능한 동의어)

ex) test ------------> scott/b_dept2
           buser2
     test2 -> buser3
     test3 -> buser4

sql> conn sys/sys12345 as sysdba // 롤(role)
형식) create [public] synonym 동의어 for 대상객체(소유자명.테이블명)

sql> create public synonym butest for scott.b_dept2;

통보받은 계정들은 로그인 -> butest 

sql> conn test/t1234 

SQL> select * from butest;
                          ========
    DEPTNO DNAME          LOC
---------- -------------- -------------
        10 ACCOUNTING     NEW YORK
        20 RESEARCH       DALLAS
        30 SALES          CHICAGO
        40 OPERATIONS     BOSTON
        50 SUPPORT        KWANGJU
        60 TESTING        SEOUL
        70 TESTING2       BUSAN
        80 TESTING3       TEST
        90 TESTING4       TEST2

9 개의 행이 선택되었습니다.

<문14>
scott계정이 b_dept2테이블에 대한 권한(insert,select) -> test계정
권한부여(grant) <> 권한회수(revoke)

객체권한

형식) revoke 회수할 권한 종류... on 적용테이블명 from 계정명

sql> conn scott/tiger  -> 관리자로 들어옴

SQL> revoke select,insert on b_dept2 from test;   -> 권한 회수

SQL> conn test/t1234

SQL> select * from buser2;        // test가 만들어준 동의어
select * from buser2
              *
1행에 오류:
ORA-00942: 테이블 또는 뷰가 존재하지 않습니다

SQL> select * from butest;        // 관리가자 만들어준 동의어
select * from butest
              *
1행에 오류:
ORA-00942: 테이블 또는 뷰가 존재하지 않습니다


<문15>
불필요로 하는 동의어 삭제
형식) drop synonym 삭제시킬 동의어 이름

sql> drop synonym buser2; //만든 사람이 삭제할 권한이 있다.
동의어가 삭제되었습니다.


sql> drop synonym butest; // 관리자가 만든 것은 계정 삭제할 수 없다.
             *
1행에 오류:
ORA-01434: 삭제할 비공개 동의어가 존재하지 않습니다


비공식과제 - 트랜잭션 ppt에 대한 시나리오 실습









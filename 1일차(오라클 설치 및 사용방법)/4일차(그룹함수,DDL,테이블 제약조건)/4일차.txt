4일차(그룹함수,DDL,테이블 제약조건)

문제1) decode함수=>다중 if문
   형식) decode(필드명 | 조건식,찾는조건 값1,
                               찾는조건2 값2,,,,)

->emp테이블에서 job이 ANALYST이면 급여를 10%인상
                               CLERK->급여를      15%인상
                               MANAGER=>급여를  20%인상
                                  X------------->인상X

(이름,업무,급여,최종인상액순으로 출력)
->switch ~case ->case~when절
--------------------------------------------------
sql>select ename,job,sal,decode(job,'ANALYST',sal*1.1,
                                    'CLERK',sal*1.15,
                                    'MANAGER',sal*1.2,sal) "최종금액"
    from emp
    order by sal desc;

ENAME      JOB              SAL   최종금액
---------- --------- ---------- ----------
KING       PRESIDENT       5000       5000
FORD       ANALYST         3000       3300
SCOTT      ANALYST         3000       3300
JONES      MANAGER         2975       3570
BLAKE      MANAGER         2850       3420
CLARK      MANAGER         2450       2940
ALLEN      SALESMAN        1600       1600
TURNER     SALESMAN        1500       1500
MILLER     CLERK           1300       1495
WARD       SALESMAN        1250       1250
MARTIN     SALESMAN        1250       1250

ENAME      JOB              SAL   최종금액
---------- --------- ---------- ----------
ADAMS      CLERK           1100       1265
JAMES      CLERK            950     1092.5
SMITH      CLERK            800        920

14 개의 행이 선택되었습니다.

 과제=>case ~when절로 변경하시오.

 spool c:\webtest\2.db3\print\20221118.txt
                                    if대신에
CASE 표현식(적용시킬 필드명) WHEN 조건1 THEN 실행문장 
WHEN 조건2 THEN 실행문장2
WHEN 조건3 THEN 실행문장3 
ELSE 결과n  =>거짓인 실행문장(위의 조건에 해당X)
END "별칭명"


sql>select empno,ename,job,sal,case job when 'ANALYST' then sal*1.1
                                                            when 'CLERK'  then sal*1.15
                                                            when 'MANAGER' then sal*1.2
                                                            else sal
                                               end "최종 인상액"
     from emp
     order by sal desc;

     EMPNO ENAME      JOB              SAL 최종 인상액
---------- ---------- --------- ---------- -----------
      7839 KING       PRESIDENT       5000        5000
      7902 FORD       ANALYST         3000        3300
      7788 SCOTT      ANALYST         3000        3300
      7566 JONES      MANAGER         2975        3570
      7698 BLAKE      MANAGER         2850        3420
      7782 CLARK      MANAGER         2450        2940
      7499 ALLEN      SALESMAN        1600        1600
      7844 TURNER     SALESMAN        1500        1500
      7934 MILLER     CLERK           1300        1495
      7521 WARD       SALESMAN        1250        1250
      7654 MARTIN     SALESMAN        1250        1250

     EMPNO ENAME      JOB              SAL 최종 인상액
---------- ---------- --------- ---------- -----------
      7876 ADAMS      CLERK           1100        1265
      7900 JAMES      CLERK            950      1092.5
      7369 SMITH      CLERK            800         920

14 개의 행이 선택되었습니다.

===============================================
<문제2>emp테이블에서 이름에 L자가 두개가 있고(and),부서가  =>like '%LL%'
           30이거나 또는 관리자(mgr)가 7782인 사원의 모든                 '%L%L%'
                  (or)
           정보(*)를 출력하는 select구문을 작성하시오.

                       and     ~(  or   )

sql>select * from emp 
      where ename like '%LL%' and (deptno=30 or mgr=7782);

     EMPNO ENAME      JOB              MGR HIREDATE        SAL            COMM
---------- ---------- --------- ---------- -------- ---------- ----------
    DEPTNO
----------
      7499 ALLEN      SALESMAN        7698 81/02/20       1600             300
        30

      7934 MILLER     CLERK           7782 82/01/23       1300
        10

===============================================
 함수->검색할때 유용한 함수(문자열,to_char(),nvl,nvl2~)
 그룹함수->통계처리 목적=>min,max,sum,avg,count(*)
           ->select  필드명,그룹함수 같이 사용 X
           ->group by 그룹지어줄 필드명

<문1>emp테이블에서 급여가 3000이상인 사원수를 구하시오.=>count(*)

 select count(*) from emp
 where sal >=3000;

  COUNT(*)
----------
         3

  1  select ename,count(*) from emp
  2*  where sal >=3000
SQL> /
select ename,count(*) from emp
       *
1행에 오류:
ORA-00937: 단일 그룹의 그룹 함수가 아닙니다

=>일반필드은 그룹함수가 아니기때문에 그룹함수가 같이 사용할 수 가 없다.는 에러메세지

  1  select ename,count(*) from emp
  2   where sal >=3000
  3*  group by ename
SQL> /

ENAME        COUNT(*)
---------- ----------
FORD                1
SCOTT              1
KING                1

**********************************************************
<문2>count(*),sum,min,max,avg=>숫자화된 데이터에서만 사용이 되는것이 아니다.
                                               =>날짜,문자데이터도 사용이 가능하다.
**********************************************************
 min(hiredate)->오래 장기 근무자, max(hiredate)=>날짜가 크다
                                                                     (2022년에 가장 가까운 날짜) 신입

sql>select min(ename),max(ename),min(hiredate),max(hiredate),
      min(sal),max(sal) from emp;

MIN(ENAME) MAX(ENAME) MIN(HIRE MAX(HIRE   MIN(SAL)   MAX(SAL)
---------- ---------- -------- -------- ---------- ----------
ADAMS      WARD       80/12/17 87/05/23        800       5000

=>영문자(알파벳의 나오는 순서를 가지고 판단 A (<)  Z(>)
            A에 가까울수록 적다
            Z에 가까울수록 크다.
============================================
***<문3>부서별로 사원의 수가 4명 이상인 사원의 정보를 찾아서 출력하되
              ==(10,20,30)->group by deptno

         부서번호,급여의 합계를 구하시오.(모든 직원 대상X)
         deptno  sum(sal)
 
 최소직원이 4명이 있는 부서만 계산
select deptno,sum(sal) "급여합계"
from emp
where count(*)>=4   
group by deptno;

 모든직원이 적용이 되는경우
select deptno,sum(sal) "급여합계"
from emp
group by deptno;

SQL> select deptno,sum(sal) "급여합계"
  2  from emp
  3  where count(*)>=4
  4  group by deptno;
where count(*)>=4
      *
3행에 오류:
ORA-00934: 그룹 함수는 허가되지 않습니다 
=>그룹에 대한 조건은 where 조건식을 사용(X)
                         having 조건식을 사용해야 한다.

*********************************
 서술형->조건식의 종류와 특징을 서로 비교해서 기술하시오.
           조건식의 종류를 아는대로 2개이상 기술하시오(단답형)->where조건식,
                                                                       having조건식
           -------------------------------------------
 데이터를 검색할때 2가지의 조건식이 존재한다.

  where 조건식 ->가장 보편적

  having 조건식->그룹에 대한 조건식
*******************************
------------------------>하나의 테이블로 검색할 수 있는 사용법(select)
  select  필드명,,,
  from 검색테이블,,,->조인
  where 일반검색에 대한 조건식
  group by 그룹을 지어줄 필드명,,
  having 그룹에 대한 조건식이 필요
  order by 정렬할때 사용

  1  select deptno,sum(sal) "급여합계"
  2  from emp
  3* group by deptno
  4  /

    DEPTNO   급여합계
---------- ----------
        30       9400
        20      10875
        10       8750

SQL> ed
file afiedt.buf(이)가 기록되었습니다

  1  select deptno,sum(sal) "급여합계"
  2  from emp
  3  group by deptno
  4* having count(*)>=4  =>전체 그룹중에서 직원수가 4명인 부서만
SQL> /

<문4>그룹함수도 중첩이 가능하다.->2단계까지만

max(avg(sal)) => 부서별로 평균값을 구한가운데  최대 평균 급여
           1
   2
max(max(sal)) =>부서별로 급여의 합계를 구하는데 최대 급여합계를 받는 부서?

min(min(sal)) =>부서별로 제일 급여합계가 적게 받는 급여?

sql>select max(avg(sal)),max(sum(sal)),min(min(sal)),max(max(sal))
      from emp
      group by deptno;

MAX(AVG(SAL)) MAX(SUM(SAL)) MIN(MIN(SAL)) MAX(MAX(SAL))
------------- ------------- ------------- -------------
   2916.66667         10875           800          5000
***********************************************
  1  select deptno,max(avg(sal)),max(sum(sal)),min(min(sal)),max(max(sal))
  2  from emp
  3* group by deptno
SQL> /
select deptno,max(avg(sal)),max(sum(sal)),min(min(sal)),max(max(sal))
       *
1행에 오류:
ORA-00937: 단일 그룹의 그룹 함수가 아닙니다
  =>일반필드를 group by로 묶어줘도 중첩된 통계처리함수와는 같이 사용X
*****************************************************


<문5>emp테이블에서 업무가 MANAGER가 아닌사원에 대한   <>,^=
                          -------------------------where job!='MANAGER'
        부서별로 급여의 합이 2500 이상인 부서의 정보를 출력하시오.
             =group by deptno  급여의합이 2500이상(having sum(sal)>=2500
       (단 부서번호,급여의 합계순으로 출력하되 급여의 합계가 높은 순으로 정렬할것)
                                                order by sum(sal) desc

select deptno,sum(sal)
from emp
where job!='MANAGER'
group by deptno
having sum(sal)>=2500
order by sum(sal) desc;

    DEPTNO   SUM(SAL)
---------- ----------
        20       7900
        30       6550
        10       6300

SQL> ed
file afiedt.buf(이)가 기록되었습니다

  1  select deptno,sum(sal)
  2  from emp
  3  where job!='MANAGER'
  4  group by deptno
  5  having sum(sal)>=7000 =>7000이상인 경우 10,30번이 탈락됨
  6* order by sum(sal) desc
SQL> /

    DEPTNO   SUM(SAL)
---------- ----------
        20       7900

SQL>



------------------------------------------------------------------------
select deptno,sum(sal) "부서별 급여합"
from emp
where  job <> upper('manager')
group by deptno
having sum(sal)>=2500
order by sum(sal) desc;

=========================================
    DEPTNO 부서별 급여합
---------- -------------
        20          7900
        30          6550
        10          6300

=>DML(insert,update,delete)+select(DQL)
                                          테이블의구조에 영향을 미치지 않는다.
==============================================
SQL구문->DDL(데이터 정의어)
          =>얼마나 효율적으로 데이터를 저장할것 인가?->테이블로
                                                               설계

        모델링->프로젝트 직전

        create
        alter
        drop =>맨 마지막에 백업,복원할때 얘기

  @c:\webtest\createuser.txt =>기존의 계정과 테이블이 없다면 먼저 실행한후 테스트
==============================================
sql>conn test/t1234

SQL> conn test/t1234
연결되었습니다.
SQL>

     c:\webtest\createuser.txt
SQL>@c:\webtest\createuser.txt  =>없는 분만

<문6> 데이터를 저장하는 방법->DDL(create,alter,drop으로 시작하는 구문)
         =>이미 데이터가 저장이 된 상태라면 중간에 구조를 변경하는데 제한이 걸린다.


sql>desc b_prtest

 이름                                      널?      유형
 ----------------------------------------- -------- ----------------------------
 ID                                                 NUMBER(2)
 NAME                                            VARCHAR2(10)

 회원테이블이라고 생각? 전번
********************************************************
해당 칼럼에 자료가 없는 경우

칼럼의 데이터 타입을 변경할 수 있다. (varchar2<--->number)
칼럼의 크기를 변경할 수 있다. (확대<-->축소)

 해당 칼럼에 자료가 있는 경우

칼럼의 데이터 타입을 변경할 수 없다.(varchar2<-->number (X)
크기를 늘릴 수는 있지만 현재 가지고 있는 데이터 크기보다 작은 크기로 변경할 수 없다.

            varchar2(15)------>varchar2(40)
                              <----(X)


*********************************************************
 기존의 테이블에 필드가 누락?
       
       기존의 테이블의 구조를 변경시키는 명령어

 형식) alter table 변경시킬테이블명 add (추가할 필드명 자료형 제약조건;

sql>alter table b_prtest add (tel varchar2(15) not null);//에러유발
       =>이미 데이터가 저장이 된 상태=>바꾸기가 어렵다.
                                              제약조건을 주기가 어렵다.
     SQL> alter table b_prtest add (tel varchar2(15) not null);
alter table b_prtest add (tel varchar2(15) not null)
            *
1행에 오류:
ORA-01758: 테이블은 필수 열을 추가하기 위해 (NOT NULL) 비어 있어야 합니다.
  =>기존에 데이터가 존재하면 필드의 제약조건중에서 not null은 사용X
                   
      alter table b_prtest add (tel varchar2(15));//null

desc b_prtest
 
 이름                                      널?      유형
 ----------------------------------------- -------- ----------------------------
 ID                                                 NUMBER(2)
 NAME                                               VARCHAR2(10)
 TEL                                       NOT NULL VARCHAR2(15)=>필드가 추가확인
                                             ======>데이터가 없는경우에 사용하는 경우

<문7>변경(modify) =>기존에 존재하는 필드를 변경하고자 할때 사용
      varchar2 <-->number (이미 데이터가 저장이 되어있으면 변경 불가)
                                데이터가 저장이 되지 않았을경우에만 가능하다.
                               ========================

      데이터가 있는 경우

      varchar2(15)---->varchar2(30) 가능
      varchar2(30)---->varchar2(15) 불가능하다. =>데이터 손실을 받을 수 있기에 
---------------------------------------------------------------------------------
 형식)alter table 변경할 테이블명 modify (변경할 필드명 데이터형 제약조건)

 sql>alter table b_prtest modify (name varchar2(30));

 테이블이 변경되었습니다

sql>desc b_prtest

 ID                                                 NUMBER(2)
 NAME                                               VARCHAR2(30) //->15->30
 TEL                                       NOT NULL VARCHAR2(15)

<문8>불필요로하는 필드(=컬럼)은 삭제도 가능
형식) alter table 변경시킬테이블명 drop column 삭제시킬 필드명(=컬럼명)

sql>alter table b_prtest drop column tel;

SQL> desc b_prtest
 이름                                      널?      유형
 ----------------------------------------- -------- ----------------------------
 ID                                                 NUMBER(2)
 NAME                                            VARCHAR2(30)

<문9>필드명을 변경?
형식) alter table 변경시킬 테이블명 rename column 변경전 필드명 to 변경후 필드명;
       name->irum

11g의 경우 ->데이터가 들어있어도 가능
---------------------------------------------------------
sql>alter table b_prtest rename column name to irum;
sql>desc b_prtest

테이블이 변경되었습니다.

SQL> desc b_prtest
 이름                                      널?      유형
 ----------------------------------------- -------- ----------------------------
 ID                                                 NUMBER(2)
 IRUM                                               VARCHAR2(30)

SQL>

**********************************************************
제약조건 ->10장 ppt 정리

 DB관리->1.어떻게 올바른 값을 저장할 것인가?(설계목적)=>제약조건이 필요한 이유

                 ename=>'adgqahahhh' =>활용X

             2.어떻게 하면 원하는 자료를 마음대로 검색?->2,3,4일(select 명령어)=>조인

**********************************************************
                            무결성제약조건=>올바른값만 입력을 받을 수 있도록 만들어진
                                                규칙(=>유효성 검사)
제약조건의 종류 및 설정

 primary key(기본키)=>1.테이블의 행을 구분하는 키워드로 사용(개념)=>유일한 값
                                    ex) 사원번호,계좌번호,일련번호,주민등록번호

                               2.중복되면 안되는 필드에 부여 
                                    ex) 사원번호,계좌번호,일련번호,주민등록번호

                              ------------------특징---------------------------------
                               중복입력X
                                primary key가 적용이 되는 필드      
                                       =>자동 NOT NULL(필수입력)

                              3.인덱스키(=책갈피(북마크))가 자동으로 생성
                                        ->내부에서 인덱스키가 부여된 필드먼저 찾아주기때문에
                                            검색속도가 빠르다.
                                    중복허용을 해주는 필드에 부여X ->ename,성별,직책

 1 홍길동
 2 홍길동
---------------------------------------------------------------------------------
  <문10>
  형식)alter table 변경할테이블명 add constraint 제약조건명 제약조건종류(적용필드명)
                                                                             ======
                                                                             primary key(id)

   테이블 종류
  
  1.사용자정의 테이블=>필요에 따라서 만드는 테이블
  2.시스템 테이블=>오라클이 제공하는 테이블=>조회

   제약조건이름=>afaabad(X) =>시스템 테이블(sys~로 시작)
                     규칙) v_변수명, c_상수명,,,

                          테이블명_제약조건약어(pk)_적용필드명
                           b_prtest_pk_id

sql>alter table b_prtest  add constraint b_prtest_pk_id primary key(id);
sql>desc b_prtest

SQL> desc b_prtest
 이름                                      널?      유형
 ----------------------------------------- -------- ----------------------------
 ID                                                    NUMBER(2)
 IRUM                                               VARCHAR2(30)

SQL> alter table b_prtest  add constraint b_prtest_pk_id primary key(id);

테이블이 변경되었습니다.

**************************************************
        xe버전에서는 데이터가 들어가 있는 상태에서는 pk를 적용시킬수가 없다.

   sql>delete from b_prtest; //백업->데이터삭제
   sql>alter table b_prtest  add constraint b_prtest_pk_id 
         primary key(id);
  
*****************************************************
   pk가 에러유발->이미 중복된 데이터가 들어가 있으면 에러유발
================================

SQL> desc b_prtest
 이름                                      널?      유형
 ----------------------------------------- -------- ----------------------------
 ID                                        NOT NULL NUMBER(2)
                                            =======(자동으로 부여된 속성)nn
 IRUM                                               VARCHAR2(30)

SQL>

SQL> select * from b_prtest;

        ID IRUM
---------- ------------------------------
         1 테스트
         2 테스트2
         3 임시
         4 홍길동
         5 테스트22
-------------------------------pk가 부여된 상태

xe버전 테스트

insert into b_prtest values(1,'테스트3');//OK
insert into b_prtest values(1,'테스트3'); =>에러유발

 sql>insert into b_prtest values(5,'테스트3');

SQL> insert into b_prtest values(5,'테스트3');
insert into b_prtest values(5,'테스트3')
*
1행에 오류:
ORA-00001: 무결성 제약 조건(TEST.B_PRTEST_PK_ID)에 위배됩니다
                  ============================>pk규칙에 어긋난 
                                                                                   중복된 id를 입력한 경우
                                                                                   발생되는 에러메세지
 insert into b_prtest values(6,'테스트3');
 1 개의 행이 만들어졌습니다.
------------------------------------------------------------------------------------
  =>잘못된 기본키입니다라고 에러가 발생이 되면 새로만들어서 실습

  ex)  create table b_prtest22(
           id number(2),
         name varchar2(15));

   alter table b_prtest22  add constraint b_prtest22_pk_id 
   primary key(id);

   //에러가 발생이 되는지 안되는지 확인?
   insert into b_prtest22 values(1,'테스트3');//OK
   insert into b_prtest22 values(1,'테스트3'); =>에러유발
---------------------------------------------------------------------------------

<문11>unique 제약조건=>중복되면 안되는 필드에 부여=>pk와 기능이 동일

*************차이점*****************************************

 pk=>not null(필수입력)+unique key같이 부여(중복되면 X)+자동 index key도 부여

 unique key=>중복허용 X 에 부여 (not null 부여X)
**********************************************************
형식) alter table 변경시킬테이블명 add constraint 제약조건이름명 제약조건종류(필드명)
                                                                     uk    unique(적용필드명)

sql>alter table b_prtest add constraint b_prtest_uk_id unique(id);

SQL> alter table b_prtest add constraint b_prtest_uk_id unique(id);
alter table b_prtest add constraint b_prtest_uk_id unique(id)
                                                   *
1행에 오류:
ORA-02261: 고유 키 또는 기본 키가 이미 존재하고 있습니다

              =>이미 pk로 인해서 unique키가 부여된 상태기때문에 중복돼서
                                      unique키를 부여할 수 없다는 에러메세지
----------------------------------------------------------------------------
<문12>제약조건을 삭제(drop constraint)<->~add constraint ~

형식) alter table 변경시킬테이블명 drop constraint 삭제시킬 제약조건이름;
   
sql> alter table b_prtest drop constraint b_prtest_pk_id;
sql> desc b_prtest ===>not null이 없어짐  

테이블이 변경되었습니다.

SQL> desc b_prtest
 이름                                      널?      유형
 ----------------------------------------- -------- ----------------------------
 ID                                                 NUMBER(2)
 IRUM                                               VARCHAR2(30)

SQL>

<문13>check 제약조건=>데이터를 저장시킬때 과연 올바른값이 들어왔는지를 체크
                                 (숫자->범위지정, 문자->올바른 값만 미리 등록)

 형식)alter table 변경시킬테이블명 add constraint  제약조건이름  제약조건
=================================================
                                      check (age>=20 and age<=65)
                                      check in ('사원','대리','계장','과장','부장','이사','전무')
===================================================

  b_prtest(id,irum)+age
  b_prtest22(id,irum)+age

 sql>alter table b_prtest add (age number);
       alter table b_prtest add (addr varchar2(80));
                    
 sql>desc b_prtest

 이름                                      널?      유형
 ----------------------------------------- -------- ----------------------------
 ID                                                 NUMBER(2)
 IRUM                                             VARCHAR2(30)
 AGE                                              NUMBER
 ADDR                                            VARCHAR2(80)
------------------------------------------------------------------------------
                     b_prtest22                  b_prtest22_ck_age
sql>alter table b_prtest add constraint b_prtest_ck_age
      check (age>=20 and age<=65);
----------------------------------------------
     ~check (age between 20 and 65);
----------------------------------------------------------
SQL> insert into b_prtest values(7,'테스트김',123,'서울시 강남구 세경빌딩');
insert into b_prtest values(7,'테스트김',123,'서울시 강남구 세경빌딩')
                                         *
1행에 오류:          =>원래크기는 2자리인데 3자리의 숫자값을 입력한 경우에 발생에러
                           메세지

ORA-01438: 이 열에 대해 지정된 전체 자릿수보다 큰 값이 허용됩니다.


SQL> insert into b_prtest values(7,'테스트김',99,'서울시 강남구 세경빌 딩');
insert into b_prtest values(7,'테스트김',99,'서울시 강남구 세경빌딩')
*
1행에 오류:
ORA-02290: 체크 제약조건(TEST.B_PRTEST_CK_AGE)이 위배되었습니다
SQL>
----------------------------------------------------------------------------

 insert into b_prtest values(7,'테스트김',123,'서울시 강남구 대현빌딩');

SQL>  insert into b_prtest values(7,'테스트김',123,'서울시 강남구 대현빌딩');
 insert into b_prtest values(7,'테스트김',123,'서울시 강남구 대현빌딩')
*
1행에 오류:                    20~65살 범위의 나이만 저장이 가능하다.
ORA-02290: 체크 제약조건(TEST.B_PRTEST_CK_AGE)이 위배되었습니다
--------------------------------------------------------------------------------
SQL>  insert into b_prtest values(7,'테스트김',23,'서울시 강남구 대현빌딩');

1 개의 행이 만들어졌습니다.

<문14>제약조건 ->default(디폴트)->값을 저장시킬때  '값' , 숫자(23) 언급하지 않아도
                                               자동으로 지정된 값이 저장이 되는 역할

sql>alter table b_prtest add (hiredate date default sysdate);
                                                    자료형  default 적용시킬값 

 desc b_prtest
----------------------------------------------------------------------------------
 이름                                      널?      유형
 ----------------------------------------- -------- ----------------------------
 ID                                                 NUMBER(2)
 IRUM                                               VARCHAR2(30)
 AGE                                                NUMBER
 ADDR                                               VARCHAR2(80)
 HIREDATE                                           DATE

<문15> 형식)insert into 테이블명 values(필드명,,,);
              ->필드의 갯수를 맞춰야 된다.(필드가 5개->필드의 순서와 갯수를 맞춰야 된다.)

sql>insert into b_prtest values(8,'임시2',34,'서울시');

insert into b_prtest values(8,'임시2',34,'서울시')
            *
1행에 오류:
ORA-00947: 값의 수가 충분하지 않습니다 =>필수입력해야 되는데 입력을 하지 않은 경우

  insert into b_prtest values(8,'임시2',34,'서울시','2019-06-26');
  1 개의 행이 만들어졌습니다.                                 =========수동으로 입력

  insert into b_prtest values(9,'임시3',21,'서울시',default);//갯수가 5개 맞음

  insert into b_prtest values(10,'임시4',43,'서울시',sysdate);

  데이터의 갯수를 맞춰야돼고 데이터는 입력하고 싶지않은 경우?
  insert into b_prtest values(11,'임시4',43,'서울시',null);//입력하지 않겠다.

SQL> select id,irum,hiredate from b_prtest;

        ID IRUM                           HIREDATE
---------- ------------------------------ --------
         8 임시2                          19/06/26
         9 임시3                          19/06/26
        10 임시4                          19/06/26
        11 임시4
         1 테스트                         19/06/26
         2 테스트2                        19/06/26
         3 임시                           19/06/26
         4 홍길동                         19/06/26
         5 테스트22                       19/06/26
         6 테스트3                        19/06/26
         7 테스트김                       19/06/26

11 개의 행이 선택되었습니다.
------------------------------------------------------------------------
 ** insert into 구문2 ** =>게시판을 작성할때 
                                 입력하고자하는 값만 입력을 하고 나머지는 null이거나
                                 default을 이용해서 데이터입력을 할 수 있다.

                                  not null인 필드만 언급
 형식) insert into 테이블명(필드명1,필드명2,,,) values(값1,값2,,,);

 12번 데이터를 입력하는데 addr (X) null을 허용 O, hiredate->default적용된 상태
                                                                              2번째 방법이 편리

 insert into b_prtest(id,irum,age) values(12,'홍길동2',33);

 sql>select * from b_prtest where id=12;
----------------------------------------------------------------------------------
 =>**기술면접 => 기본적인 SQL명령어(1~2일)
                      **조인(하나 이상의 테이블) 검색
                      서브쿼리
      ******************************
     제약조건=>pk,uk,ck,not nul =>하나의 테이블에 설정이 가능
                   ===========

                   fk(foreign key) =>관계형 데이터베이스의 테이블간의 정의를 위해
                                              한개~두개로 만들어진 관리
                        외래키

                    쇼핑몰 구축=>데이터 저장(15~20개)
                                     하나의 테이블에 저장? 필드수가 25~
                                            5만개->저장하기도 힘들고, 검색속도가 느림.
                   신입=>설계X ===>조회수준

                    서로 다른 한개이상의 테이블사이의 관계
                    (한개이상의 테이블에서 설정하는 방법)
------------------------------------------------------------------------------------
=>sawon(신입사원), dept(부서)

 sql>create table dept (deptno number primary key,
                                  dname varchar2(20) not null,
                                  loc varchar2(15) not null);
//-------------------------------------------------------------------------
 ->alter table dept add constraint dept_deptno_pk primary key(deptno);
//---------------------------------------------------------------------
     insert into dept values(10,'영업부','서울');
     insert into dept values(20,'개발부','대전');
     insert into dept values(30,'총무부','마산');

    select * from dept;

    DEPTNO DNAME                LOC
---------- -------------------- ---------------
        10 영업부               서울
        20 개발부               대전
        30 총무부               마산

 
 sql>create table sawon(
        id number not null,
        name varchar2(20) not null,
        deptno number,
        primary key(id));

  sql>insert into sawon values(1,'홍길동',10);
        insert into sawon values(2,'테스트',40);//X

----------------------------------------------------------------
   foreign key(외래키)=>테이블에 값을 저장할려고 할때 
                                  특정 필드와 연결이 되어있는 다른 테이블의
                                  필드값을 검사(존재 체크)
                             =>값을 저장을 시켜준다.
                                   존재X---------->저장X
                                  "참조 무결성 강화 규칙에 위배"
                                  (=reference(꺼내보는것))
 <문16> 형식)      sawon
     alter table 변경시킬 테이블명 add constraint 관계설정할 이름 
          foreign key(자기 테이블의 필드명)deptno
    references 상대방테이블명(연결시킬 필드명)
                                          pk
----------------------------------------------------------------------------------------
 sql>alter table sawon add constraint sawon_fk_deptno foreign key(deptno)
       references dept(deptno);

SQL> alter table sawon add constraint sawon_fk_deptno foreign key(deptno)
  2         references dept(deptno);
alter table sawon add constraint sawon_fk_deptno foreign key(deptno)
                                 *
1행에 오류:
ORA-02298: 제약 (TEST.SAWON_FK_DEPTNO)을 사용 가능하게 할 수 없음 - 부모 키가
없습니다

 =>이미 sawon에 규칙을 어기는 데이터가 이미 들어가있는  경우에는 관계설정을 할 수 없다는
      에러메세지
================================================

     insert into sawon values(2,'테스트',40);//X

    
    삭제=>delete from sawon where id=2;  //insert 2번부터
            or

    수정=>update sawon set deptno=20 where id=2;  //insert 3번부터
===================================
  sql>alter table sawon add constraint sawon_fk_deptno foreign key(deptno)
       references dept(deptno);

테이블이 변경되었습니다.

sql>insert into sawon values(3,'테스트22',20); //ok
sql>insert into sawon values(4,'테스트33',900);

SQL> insert into sawon values(4,'테스트33',900);
insert into sawon values(4,'테스트33',900)
*
1행에 오류:
ORA-02291: 무결성 제약조건(TEST.SAWON_FK_DEPTNO)이 위배되었습니다- 부모 키가
없습니다         =========

=================================================
  *오라클의 자료형*

    varchar,varchar2==========>varchar2(4000)->2000자(한글)
    number
   date
    Long->최대크기 2GB의 데이터 저장 <--varchar2(4000)이상의 데이터 저장시
    LOB->2GB (이미지 파일,동영상 파일) 저장
             음악사이트, 오라클-유닉스(경로)->varchar2(200)=>경로포함해서 파일명=>저장

           <img src="경로포함해서 불러올 파일명"~>

<문17>RENAME 변경전테이블 TO 변경후 테이블명

           b_prtest=>b_prtest22  (b_prtest33<->b_prtest22)

sql> rename b_prtest to b_prtest22;
       rename b_prtest22 to b_prtest;

--------------------------------------------------------------
 예습

제약조건의 활성화,비활성화
시스템 테이블 
** 조인 **
-----------------------------



  







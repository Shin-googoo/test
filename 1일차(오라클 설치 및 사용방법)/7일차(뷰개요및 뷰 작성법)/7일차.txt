7일차(뷰개요 및 뷰 작성법)

 spool c:\webtest\2.db\print\20221123.txt

 view,union,union all(집합 연산자)

<문1>select * from tab;

SQL> select * from tab; //만들어진 테이블,뷰갯수를 확인

TNAME                          TABTYPE  CLUSTERID
------------------------------ ------- ----------
BONUS                          TABLE
B_EMP2                         TABLE
B_EMP3                         TABLE
DEPT                           TABLE
EMP                            TABLE
EMP_DEPTNO                     TABLE
SALGRADE                       TABLE
V_EMP20                        VIEW =>작성한 뷰를 확인이 가능하다.
ZIPCODE                        TABLE

9 개의 행이 선택되었습니다.

뷰를 사용할때 주의할점=>뷰가 실행이 안되는 경우
                             뷰를 통해서 만들어진 테이블의 구조에
                             문제 발생

sql>create table b_emp4 as select * from emp;

테이블이 생성되었습니다.

emp테이블에서 A자로 시작하는 사원의 정보를 얻어오는 SQL
(사원번호,이름) =>v_ename(뷰)

sql>create view v_ename
     as select empno,ename from b_emp4
     where ename like 'A%';

뷰가 생성되었습니다

sql>select * from v_ename;//select * from 뷰명=>테이블을 찾아가서 실행

     EMPNO ENAME
---------- ----------
      7499 ALLEN
      7876 ADAMS

<문2>오라클에서 임의의 특정테이블의 필드를 사용X
->쓸모 없어진 백업테이블에 사용할것.(복구X)

형식)alter table 변경t명 set unused column 사용하지 못하게 만들 필드명
sql>alter table b_emp4 set unused column ename;

sql>desc b_emp4  =>필드는 더 이상 사용X

---------------------------
 EMPNO
    NUMBER(4)
 JOB
    VARCHAR2(9)
 MGR
    NUMBER(4)
 HIREDATE
    DATE
 SAL
    NUMBER(7,2)
 COMM
    NUMBER(7,2)
 DEPTNO
    NUMBER(2)

SQL> select * from v_ename;

SQL> select * from v_ename;
select * from v_ename
              *
1행에 오류:
ORA-04063: view "SCOTT.V_ENAME"에 오류가 있습니다

=>뷰와 연결이 되어있는 테이블의 구조에 문제가 발생이 되면 이를 실행시키는
    뷰가 제대로 작동되지 않아서 발생된 에러메세지이다.
---------------------------------------------------------------------
<문3>더 이상 불필요로하는 뷰를 삭제->drop view 삭제시킬 뷰이름=>DDL
->create view 권한->뷰를 수정,삭제도 같이 사용을 할 수 있다.

sql>drop view v_ename;

<문4>데이터 딕셔너리->user_views(시스템테이블)->저장
뷰를 생성=>텍스트로 저장?

sql>desc user_views

 이름                                      널?      유형
 ----------------------------------------- -------- ----------------------------
 VIEW_NAME(뷰이름)                                 NOT NULL VARCHAR2(30)
 TEXT_LENGTH(뷰의 문자열 길이)                                        NUMBER
 TEXT(뷰의 내용->텍스트)                                               LONG
 TYPE_TEXT_LENGTH                                   NUMBER
 TYPE_TEXT                                          VARCHAR2(4000)
 OID_TEXT_LENGTH                                    NUMBER
 OID_TEXT                                           VARCHAR2(4000)
 VIEW_TYPE_OWNER                                    VARCHAR2(30)
 VIEW_TYPE                                          VARCHAR2(30)
 SUPERVIEW_NAME                                     VARCHAR2(30)
 EDITIONING_VIEW                                    VARCHAR2(1)
 READ_ONLY (읽기전용 확인)                                         VARCHAR2(1)

SQL>select  view_name,text_length,text from user_views;

VIEW_NAME                      TEXT_LENGTH
------------------------------ -----------
TEXT
--------------------------------------------------------------------------------
V_EMP20                                 57
select empno,ename,job from b_emp3
       where deptno=20

 보고서 작성할때 사용

SQL>col view_name format a15
sql>col text_length format 99,990
sql>col text format a40

sql>select  view_name,text_length,text from user_views;

VIEW_NAME       TEXT_LENGTH TEXT
--------------- ----------- ----------------------------------------
V_EMP20                  57 select empno,ename,job from b_emp3
                                   where deptno=20

ed

  1  create view v_search
  2  as
  3* select  view_name,text_length,text from user_views
SQL> /

뷰가 생성되었습니다.

SQL> select * from v_search;

VIEW_NAME       TEXT_LENGTH TEXT
--------------- ----------- ----------------------------------------
V_EMP20                  57 select empno,ename,job from b_emp3
                                   where deptno=20

V_SEARCH                 50 select  view_name,text_length,text from
                            user_views

SQL>

<문5>만들어진 뷰를 나중에 다시 수정하고 싶다.=>수정 X =>지금까지 삭제 O

뷰를 작성할때 처음부터 수정하는것 까지 고려해서 작성하길 원하다면
                      선택옵션
형식)  create [or replace] view 만들 뷰이름 as sql구문

ex) create view v_test as ~  ->수정이 불가능한 뷰를 작성할때
     create or replace view v_test as ~ 수정도 가능한 뷰를 작성할때
               ======(삭제하고 나서 다시 만들면 된다.)

  create table b_emp5 as select * from emp;

b_emp5테이블에서 부서번호가 10번인 데이터를 찾아서 그 사원의 사번,이름
입사일만 출력시켜주는 뷰를 작성하시오.(필드명도 변경해서 작성) v_emp_10
(단 employee_no,employee_name,e_hiredate)

sql>create or replace view v_emp_10(employee_no,
                                 employee_name,e_hiredate)
      as select empno,ename,hiredate from b_emp5
      where deptno=10;

뷰가 생성되었습니다.

sql>select * from v_emp_10;

EMPLOYEE_NO EMPLOYEE_N E_HIREDA <--기존 테이블의 필드명 대신에
----------- ---------- --------                     실제 b_emp5테이블의 필드가
       7782 CLARK      81/06/09               변경X
       7839 KING       81/11/17
       7934 MILLER     82/01/23

sql>select * from v_search; //수정전

VIEW_NAME       TEXT_LENGTH TEXT
--------------- ----------- ----------------------------------------
V_EMP20                  57 select empno,ename,job from b_emp3
                                   where deptno=20

V_SEARCH                 50 select  view_name,text_length,text from
                            user_views

V_EMP_10                 61 select empno,ename,hiredate from b_emp5
                                  where deptno=10
                                 =>변경전
SQL>뷰를 수정=>기존에 존재하는 뷰이름으로 새로운 내용의 sql작성


sql>create or replace view v_emp_10(id,job2,hire)
      as select empno,job,hiredate from b_emp5
      where deptno=20 or ename like '%D%';

sql>select * from v_search;

VIEW_NAME       TEXT_LENGTH TEXT
--------------- ----------- ----------------------------------------
V_EMP20                  57 select empno,ename,job from b_emp3
                                   where deptno=20

V_SEARCH                 50 select  view_name,text_length,text from
                            user_views
                              =============================
V_EMP_10                 79 select empno,job,hiredate from b_emp5
                                  where deptno=20 or ename like '%D%
                            ' =============================
                                변경후

sql>select * from v_emp_10;

        ID JOB2      HIRE
---------- --------- --------
      7369 CLERK     80/12/17
      7521 SALESMAN  81/02/22
      7566 MANAGER   81/04/02
      7788 ANALYST   87/04/19
      7876 CLERK     87/05/23
      7902 ANALYST   81/12/03

6 개의 행이 선택되었습니다.

<문6>뷰의 종류,뷰를 관리(데이터관리=>insert,update,delete) 가능?
                                                         =>DML
************************************************
 단순뷰->하나의 테이블로 만들어진 뷰=>DML이 가능,그룹함수,distinct 사용불가

 복합뷰->여러개의 테이블로 만들어진 뷰(ex 조인)=>DML이 불가능(테이블명이 X)
            그룹함수,distinct사용 가능

 ppt 참조해서 정리
************************************************
  b_emp5->DML (수정)

부서번호가 30인 사원의 이름,급여,부서번호만 보여주는 뷰를 작성?(v_30)

 create view v_30 as  select ename,sal,deptno from b_emp5
 where deptno=30;

SQL> select * from v_30; //수정(변경)

ENAME             SAL     DEPTNO
---------- ---------- ----------
ALLEN            1600         30   // ALLEN ->1개월 감봉(1600->0)
WARD             1250         30
MARTIN           1250         30
BLAKE            2850         30
TURNER           1500         30
JAMES             950         30

6 개의 행이 선택되었습니다.

SQL>

형식) update 변경시킬테이블명 set 변경할 필드명=값,,,, where 조건식
                  =========
                   뷰이름
 sql>update v_30 set sal=0 where ename='ALLEN';

1 행이 갱신되었습니다.

SQL> select * from v_30;

ENAME             SAL     DEPTNO
---------- ---------- ----------
ALLEN               0         30 -------->1600
WARD             1250         30
MARTIN           1250         30
BLAKE            2850         30
TURNER           1500         30
JAMES             950         30

6 개의 행이 선택되었습니다.  //실행취소->rollback(insert,update,delete)->DML

SQL>rollback;

SQL> select * from v_30;

ENAME             SAL     DEPTNO
---------- ---------- ----------
ALLEN            1600         30
WARD             1250         30
MARTIN           1250         30
BLAKE            2850         30
TURNER           1500         30
JAMES             950         30

6 개의 행이 선택되었습니다.

SQL> v_maxsal (뷰이름)
<문7>단순뷰에서도 그룹함수 사용이 가능=>필드명이 없기때문에 에러유발
                                            =>필드명을 지정->해서 불러올수있다.
     부서별로 최대급여를 조회할 수 있는 뷰를 작성하시오.=>group by deptno
     (뷰의 내용도 수정이 가능하게 작성할것)  (부서번호,최대급여)

sql>create or replace view v_maxsal
      as select deptno,max(sal)
      from emp
      group by deptno;

 SQL> create or replace view v_maxsal
  2        as select deptno,max(sal)
  3         from emp
  4        group by deptno;
      as select deptno,max(sal)
                       *
2행에 오류:
ORA-00998: 이 식은 열의 별명과 함께 지정해야 합니다

=>뷰를 작성할때 실행시킬 SQL구문의 일반필드 상관X 
=>가상필드(=계산필드)=>필드존재X==>필드에 대한 별칭을 사용해야 된다.
ed
=============================

  1  create or replace view v_maxsal
  2        as select deptno,max(sal) as "최대 급여" =>total
  3         from emp
  4*       group by deptno
SQL> /

뷰가 생성되었습니다.

SQL> select * from v_maxsal; =>뷰에서 그룹함수를 사용이 가능하지만 별칭을 부여해야 한다.
                                                (단순뷰에서만)
    DEPTNO  최대 급여=>한글 깨진 경우에는 total로 
---------- ----------
        30       2850
        20       3000
        10       5000
-------------------------------------------------------------------------------------
SQL>복합뷰(조인,서브쿼리)->편리성 추구, DML X
        사원의 이름과 부서명을 출력시켜주는 뷰를 작성?(v_dname)
               ename  dname
<문8>복합뷰->조인을 가지고
================================
sql>create or replace view v_dname
     as select e.ename,d.dname
     from emp e,dept d
     where e.deptno=d.deptno;

 SQL> create or replace view v_dname
  2       as select e.ename,d.dname
  3       from emp e,dept d
  4       where e.deptno=d.deptno;

뷰가 생성되었습니다.

SQL> select * from v_dname;//v_search=>user_views에 등록

ENAME      DNAME
---------- --------------
SMITH      RESEARCH
ALLEN      SALES
WARD       SALES
JONES      RESEARCH
MARTIN     SALES
BLAKE      SALES
CLARK      ACCOUNTING
SCOTT      RESEARCH
KING       ACCOUNTING
TURNER     SALES
ADAMS      RESEARCH

ENAME      DNAME
---------- --------------
JAMES      SALES
FORD       RESEARCH
MILLER     ACCOUNTING

14 개의 행이 선택되었습니다.

SQL>

<문9>복합뷰->서브쿼리를 이용
SMITH 보다 많은 급여를 받는 사원의 이름,급여,부서번호를 조회할 수 있는 SQL작성
(단 뷰의 이름은 v_smith, 경우에 따라서는 뷰의 내용도 수정할 수 있도록 한다.)

sql>create or replace view v_smith
      as select ename,sal,deptno from emp
      where sal > (select sal from emp where ename='SMITH');

뷰가 생성되었습니다

sql>select * from v_smith;

ENAME             SAL     DEPTNO
---------- ---------- ----------
ALLEN            1600         30
WARD             1250         30
JONES            2975         20
MARTIN           1250         30
BLAKE            2850         30
CLARK            2450         10
SCOTT            3000         20
KING             5000         10
TURNER           1500         30
ADAMS            1100         20
JAMES             950         30

ENAME             SAL     DEPTNO
---------- ---------- ----------
FORD             3000         20
MILLER           1300         10

13 개의 행이 선택되었습니다.

***단순뷰->DML이 가능=>예외조항**

1.delete가 안되는 경우=>그룹함수,group by,distinct를 사용한 경우(계산필드
2.insert,update가 안되는 경우                                            가상필드
    그룹함수,group by,distinct를 사용한 경우                             때문에)
    별칭부여->가상필드(->계산필드)부여=>select
    ->rownum
=======================================
 정리=>존재하지 않은 가상필드를 사용->insert,update,delete 실행이 안된다.

  단순뷰->DML을 적용시키고 싶다.->group by,distinct을 사용하면 안된다.
            단순히 편리성때문에 select대신 사용
                                      ->group by, distinct을 사용해도 된다.
==========================================

  뷰->select 필드명,,,그룹함수를 사용(max(sal)) =>뷰를 작성할때 반드시 별칭(필드 대용)을 부여


  데이터를 입력,수정,삭제 입장=>필드에 데이터 입력
     insert into 테이블명 values(,,,,,) =>그룹함수,group by,distinct
===========================================
**<문10> 뷰를 통해서 제약조건을 줄 수 가 있다.=>[with check option] 옵션

   b_emp5테이블을 이용해서 emp30(30번 부서만 가진)뷰를 작성
   with check option을 부여해서 작성하시오.(모든 정보를 보여줄것 *)   

 형식) ~ with check option constraint 제약조건 이름;
sql>create or replace view emp30
       as select * from b_emp5
      where deptno=30 =>제약조건이 된다. 
      with check option constraint emp30_ck;//제약조건이 적용

 SQL> select empno,deptno from b_emp5;//현재 수정할 부서번호 확인용

     EMPNO     DEPTNO
---------- ----------
      7369         20
      7499         30
      7521         30
=================
      7566         20
==================
      7654         30
      7698         30
      7782         10
      7788         20
      7839         10
      7844         30
      7876         20

     EMPNO     DEPTNO
---------- ----------
      7900         30
      7902         20
      7934         10

14 개의 행이 선택되었습니다.

SQL>

 empno ->7566=>deptno 가 20번=>30번부서로 변경하자

 부서번호를 30번으로 변경하는 SQL작성? (수정되는지 확인)

 sql>
SQL> select empno,ename from b_emp5 where empno=7566;

     EMPNO ENAME
---------- ----------
      7566 JONES  =>부서번호가 20

sql> update emp30
       set deptno=30
       where empno=7566;//20번 부서이기에 수정X

0 행이 갱신되었습니다. =>조건에 만족하는 30부서의 데이터에 한해서
                                수정이 가능하다.
====================================
<문11>데이터를 입력하는데 id값이 100이하인 경우에만 입력을
           허용해주는 뷰를 작성(v_test1)

  sql>create table test1(id number);  //id>=1 and id<100

 sql>insert into test1 values(1); //테이블의 데이터입력시 제한X
 sql>create view v_test1
       as select * from test1 where id < 100 =>제약조건이 된다.
       with check option constraint test1_ck;

뷰가 생성되었습니다.

 형식) insert into 뷰이름 values(값~);

 sql> insert into test1 values(2);
        insert into test1 values(3);
        insert into test1 values(4);
        insert into test1 values(5);

       insert into v_test1 values(6);
       insert into v_test1 values(7);
       insert into v_test1 values(8);

SQL> select * from v_test1;

        ID
----------
         1
         2
         3
         4
         5
         6
         7
         8

8 개의 행이 선택되었습니다.

sql> insert into v_test1 values(102);

SQL> insert into v_test1 values(102);
insert into v_test1 values(102)
            *
1행에 오류:
ORA-01402: 뷰의 WITH CHECK OPTION의 조건에 위배 됩니다
   =>where id < 100 라는 이 조건에 규칙을 어겼기때문에 입력이 안된다.

SQL> insert into test1 values(102);//실제 자체 테이블에서 가능(제약조건X)

1 개의 행이 만들어졌습니다.

SQL> select * from v_test1;//where id < 100 조건에 맞지않은 데이터는
                                       //출력이 안되게 설정
        ID
----------
         1
         2
         3
         4
         5
         6
         7
         8

8 개의 행이 선택되었습니다.

SQL> select * from test1;//실제 테이블로 검색

        ID
----------
         1
         2
         3
         4
         5
         6
         7
         8
       102 //제약조건에 위배되는 데이터도 보여준다.

9 개의 행이 선택되었습니다.

SQL>

======================================

<문12>뷰를 작성할때 with read only를 부여하는 경우 (읽기전용뷰)
           수정X (부서번호가 30번인 부서이름을 출력)
          =>delete

sql>create or replace view dept30
      as select deptno,dname from dept
      where deptno=30
      with read only; //읽기전용뷰=>select 만 하라

 형식) delete from 뷰이름;// 테이블이름 대신에
sql>delete from dept30;

SQL> delete from dept30;
delete from dept30
            *
1행에 오류:
ORA-42399: 읽기 전용 뷰에서는 DML 작업을 수행할 수 없습니다.
----------------------------------------------------------------
** 뷰의 활용 **

 오라클의 페이징 처리 기법

 테이블에 데이터가 많은 상태=>화면구현 (페이지당 10개 default)=>20,30
                                                 www.jspstudy.co.kr
                                                       (jsp 문의 게시판)

 1.rownum =>내부적으로 번호를 매기면서 화면에 출력시켜주는 오라클의
                     내부적인 고유번호(=일련번호)

sql>select empno,ename from emp;//저장된 순서대로 출력

     EMPNO ENAME
---------- ----------
      7369 SMITH
      7499 ALLEN
      7521 WARD
      7566 JONES
      7654 MARTIN
      7698 BLAKE
      7782 CLARK
      7788 SCOTT
      7839 KING
      7844 TURNER
      7876 ADAMS

     EMPNO ENAME
---------- ----------
      7900 JAMES
      7902 FORD
      7934 MILLER

14 개의 행이 선택되었습니다.

SQL>

  1* select rownum,empno,ename from emp
SQL> /

    ROWNUM      EMPNO ENAME
---------- ---------- ----------
         1       7369 SMITH
         2       7499 ALLEN
         3       7521 WARD
         4       7566 JONES
         5       7654 MARTIN
         6       7698 BLAKE
         7       7782 CLARK
         8       7788 SCOTT
         9       7839 KING
        10       7844 TURNER
        11       7876 ADAMS

    ROWNUM      EMPNO ENAME
---------- ---------- ----------
        12       7900 JAMES
        13       7902 FORD
        14       7934 MILLER

14 개의 행이 선택되었습니다.

SQL>

  1* select rownum empno,ename from emp
SQL> /                       =>empno을 rownum의 별칭형태로 사용

     EMPNO ENAME
---------- ----------
         1 SMITH
         2 ALLEN
         3 WARD
         4 JONES
         5 MARTIN
         6 BLAKE
         7 CLARK
         8 SCOTT
         9 KING
        10 TURNER
        11 ADAMS

     EMPNO ENAME
---------- ----------
        12 JAMES
        13 FORD
        14 MILLER

14 개의 행이 선택되었습니다.

SQL>
**************************************
페이징 처리
*********

SELECT * FROM
(
    필드를 출력하되 앞에 번호를 매기면서 출력하라
  SELECT ROWNUM AS RNUM, GET.* FROM  =>GET.* (모든  필드)
        =>데이터를 출력할때 앞에 번호를 매기면서 모든 필드의 값을 출력하라
    (             
+ query + (이곳에 데이터를 불러오는 쿼리문이 들어간다.)

    ) GET(테이블의 별칭)
   ORDER BY ROWNUM desc    //번호가 높은순->낮은순으로 정렬하면서
)

WHERE RNUM BETWEEN 1 AND 10 ORDER BY RNUM ASC;
  => 최종적으로 1~10번사이의 데이터범위내에서 정렬하라(오름차순)

     ROWNUM  (1~10)
페이징 처리를 하기 위해선 전체 줄 수도 알아야 하기 때문에, 그를 알기위한 쿼리문


SELECT COUNT(*) CNT FROM ( + query + ) 

출처: http://notpeelbean.tistory.com/36 [Storm Of Two Yellow Beans]


<문14>emp테이블에서 가장 최근에 입사한 5명의 사원의 이름과 입사일을 출력
  하시오.                    =============TOP-N(화면에 출력할 갯수)

공식)
 select rownum "별칭명",필드명,,,테이블 별칭.*
 from  (
         select 필드명,,,
         from 테이블명
         order by top-N 필드명(정렬이 되는 필드명) desc (가장 최근)
) 별칭명
where 조건식(rownum <=top-N)에 맞는값을 부여

sql>select rownum "num",ename,hiredate
      from (
                select ename,hiredate
                from emp
                order by hiredate desc
      )
where rownum <=&num;

SQL> select rownum "num",ename,hiredate
  2        from (
  3                  select ename,hiredate
  4                  from emp
  5                  order by hiredate desc
  6        )
  7  where rownum <=&num;
num의 값을 입력하십시오: 5
구   7: where rownum <=&num
신   7: where rownum <=5

       num ENAME      HIREDATE
---------- ---------- --------
         1 ADAMS      87/05/23
         2 SCOTT      87/04/19
         3 MILLER     82/01/23
         4 JAMES      81/12/03
         5 FORD       81/12/03

SQL> /
num의 값을 입력하십시오: 3
구   7: where rownum <=&num
신   7: where rownum <=3

       num ENAME      HIREDATE
---------- ---------- --------
         1 ADAMS      87/05/23
         2 SCOTT      87/04/19
         3 MILLER     82/01/23
==============================
 집합연산자(union,union all,minus)->시큐어 코딩
              서로 다른 두개의 SQL문장의 실행결과를 하나로 합쳐서 보여준다.

<문15>emp테이블에서 업무가 MANAGER인 사원의 사번,이름을 구하시오.
 select empno,ename from emp
 where job='MANAGER'; -------->1

     EMPNO ENAME
---------- ----------
      7566 JONES
      7698 BLAKE
      7782 CLARK

ed

  1  select empno,ename from emp
  2   where job='MANAGER'
  3  union------------------------------------>minus
  4  select empno,ename from emp
  5*  where ename like 'A%'
SQL> /

     EMPNO ENAME  =>따로 분리가 된 상태에서 합친결과 (X)
---------- ----------  =>서로 얻은결과를 섞어서보여줌(O)
      7499 ALLEN
     ------------------------
      7566 JONES
      7698 BLAKE
      7782 CLARK
     --------------------------
      7876 ADAMS
 ed
  1  select empno,ename from emp
  2   where job='MANAGER'
  3  union all
  4  select empno,ename from emp
  5*  where ename like 'A%'
SQL> /

     EMPNO ENAME   =>union all->합집합인데 둘다 있는 그대로 다 보여준다.
---------- ----------
      7566 JONES
      7698 BLAKE   A
      7782 CLARK
     --------------
      7499 ALLEN   B
      7876 ADAMS

SQL> ed
file afiedt.buf(이)가 기록되었습니다

  1  select empno,ename from emp
  2   where job='MANAGER'
  3  minus========================>차집합(A-B)->A에
  4  select empno,ename from emp                해당되는 SQL구문만 출력
  5*  where ename like 'A%'                   **MS-SQL 차집합(Except)
SQL> /

     EMPNO ENAME
---------- ----------
      7566 JONES
      7698 BLAKE
      7782 CLARK

ed

************************
집합연산자의 주의할점
************************

1.서로 다른 필드를 사용해도 상관없다.
2.합쳐지는 필드의 자료형은 반드시 같아야 한다.
3.합쳐지는 필드의 갯수는 서로 같아야 된다.

 ed
**************************
  1  select empno,job from emp =>필드명이 다르다.(job)
  2   where job='MANAGER'
  3  union all
  4  select empno,ename from emp=>필드명이 서로다르다(ename)
  5*  where ename like 'A%'
SQL> /

     EMPNO JOB
---------- ----------
      7566 MANAGER
      7698 MANAGER
      7782 MANAGER
      7499 ALLEN
      7876 ADAMS

ed

SQL> ed
file afiedt.buf(이)가 기록되었습니다

  1  select empno,sal from emp
                         ============>숫자
  2   where job='MANAGER'
  3  union all
  4  select empno,ename from emp
  5*  where ename like 'A%'
SQL> /         ===============>문자 (자료형이 안맞는다.)
select empno,sal from emp
             *
1행에 오류:
ORA-01790: 대응하는 식과 같은 데이터 유형이어야 합니다

************************************
합쳐지는 필드의 갯수는 맞아야 된다. 자료형도 같아야 된다.
************************************

ed
file afiedt.buf(이)가 기록되었습니다

  1  select empno,job,sal from emp  =>3개
  2   where job='MANAGER'
  3  union all
  4  select empno,ename from emp
  5*  where ename like 'A%'           =>2개  1:1대응관계
SQL> /
select empno,job,sal from emp
*
1행에 오류:
ORA-01789: 질의 블록은 부정확한 수의 결과 열을 가지고 있습니 다.
    =>1:1대응관계가 안되기때문이다.

 과제
 트랜잭션? ppt 동의어(시노님),시컨스,인덱스
--------------------------------------------
 =>1일차~5일차(SQL활용 체크리스트) 실습
      hrd.kiccampus.com =>평가     

     과제 60%  체크리스트 40%
   4:00~4:40 5문제->화면캡처 4가지->1개에 5문제 포함해서 화면캡처
                                                1개(2문제)  1개(3문제) 화면캡처

    문제 5분정도
   4:45~5:50분까지 7문제->화면캡처X ->필기문제
-----------------------------------------------------------------------
                                                 


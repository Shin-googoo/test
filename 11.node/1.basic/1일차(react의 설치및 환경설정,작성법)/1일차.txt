1일차(리액트의 개요 및 설치,작성법)

==================================

***리액트의 개요 및 특성 ***

1.페이스북에서 리엑트 라이브러리 발표 <--->앵귤러(구글)->Framework=>
								      완벽한 개발환경이 구축=>내용을 넣어주면
UI 상태 자동 관리 – 화면의 맨 마지막 상태만 관리                                    편리(초보자)
                                                                                                                단점:->내 마음대로 고치기가 쉽지X
  =>라이브러리(View 부분만 존재(M,C이 빠져있다.)
     내 마음대로 고칠수가 있다.  =>초보자 입장에서는 불편
                                                        =>중급이상=>내 맘대로 고치기가 수월하다.
===============================================

***2.속도 빠른 DOM 조작(가상 DOM을 사용)=>수정=>실시간으로 편집이 가능

3.결합이 용이한 UI를 지원하는 API=>컴포넌트끼리 결합(중첩이 가능)
                                                <app-컴포넌트명></app-컴포넌트명>=>앵귤러
                                               =====================
                                                리액트=><컴포넌트명 />=>태그이름으로 결합

4.자바스크립트로 정의하는 비주얼=>es6문법을 주로 사용

5.MVC 구조에서의 ‘V’- 비주얼한 요소와 그 상태를 최신으로 유지하는데 중점을 
   둔 뷰레이어에서 작동한다(실시간으로 변경이 된다.)

*****리액트를 설치하면서 같이 설치가 되는 의존적인 라이브러리 용어개념 ***

1.babel (바벨)           ECMAScript6를 지원하지 않은  환경에서 ECMAScript syntax를
                              사용가능하게 설정(=>es6을 지원해주지 않은 브라우저가 리액트를
                              사용해주기위해 만들어진 라이브러리)

2.webpack      모듈 번들러(import  가능하게, 자바스크립트파일들을 하나로 합치게한다.)
    (웹팩)                  ~.ts->~.js(앵귤러)
                             ~.js(리액터)->yarn start
                      =>자바스크립트파일 =>모아서 메모리에 올려서 실행
=================================================
                                       3000
3.webpack-dev-server    webpack에서 지원하는 간단한 개발서버
                                    Hot-loader를 통해서 코드가 수정될때마다 
                                   자동으로 리로드 되게 할 수 있다.(새로 고침기능)
=========================================
1.node.js설치 됐는지를 확인->npm명령어=>yarn명령어
2.비주얼스튜디어코드 설치 및 환경설정
**********************************************************************
  리액트서버->요청---------------->이클립스(톰캣서버 실행)
      프런트                                   백업(RestController)
                      <--------------

angular,react=>회사(버전에 따라서 실행이 안되는경우도 많기 때문에)
                            버전관리 하는 방법을 제시

=>package.json (수동 또는 자동) ->이후에 프로그램을 설치 =>자동으로 버전명과 같이
                                                   파일에 기록
***********************

C:\webtest\test\=>연습용

C:\webtest\test>npm init =>자동으로 package.json파일을 작성해주는 명령어
                           =====
This utility will walk you through creating a package.json file.
It only covers the most common items, and tries to guess sensible defaults.

See `npm help json` for definitive documentation on these fields
and exactly what they do.

Use `npm install <pkg>` afterwards to install a package and
save it as a dependency in the package.json file.

Press ^C at any time to quit.
package name: (test) testkim =>
version: (1.0.0)  =>버전명->enter(디폴트)
description: configuration test =>파일의 사용목적
entry point: (index.js)  =>중요 역할해주는 파일명을 지정하시오.(main.js)
test command: 디폴트
git repository:  디폴트(git의 주소~)
keywords: install =>설치버전목적
author: lys          =>작성자
license: (ISC)      =>디폴트
About to write to C:\webtest\test\package.json:

{
  "name": "testkim",
  "version": "1.0.0",
  "description": "configuration test",
  "main": "index.js",
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "keywords": [
    "install"
  ],
  "author": "lys",
  "license": "ISC"
}


Is this OK? (yes)  yes
                                                                            

C:\webtest\test>npm install -g jquery =>전역으로 설치한 경우->기록X
+ jquery@3.5.0
added 1 package from 1 contributor in 0.674s

C:\webtest\test>dir
 C 드라이브의 볼륨에는 이름이 없습니다.
 볼륨 일련 번호: 38C6-CD58

==========================>npm install
 C:\webtest\test 디렉터리

2019-11-13  오후 12:16    <DIR>          .
2019-11-13  오후 12:16    <DIR>          ..
2019-11-13  오후 12:16               259 package.json
               1개 파일                 259 바이트
               2개 디렉터리  527,392,256,000 바이트 남음

C:\webtest\test>type package.json =>type 내용을 확인하고 싶은 파일명
{
  "name": "testkim",
  "version": "1.0.0",
  "description": "configuration test",
  "main": "index.js",
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "keywords": [
    "install"
  ],
  "author": "lys",
  "license": "ISC"
}

C:\webtest\test>npm install jquery =>-g를 빼고 설치(지역설치) 그 폴더에 설치->기록
npm notice created a lockfile as package-lock.json. You should commit this file.
npm WARN testkim@1.0.0 No repository field.

+ jquery@3.5.0
added 1 package from 1 contributor and audited 1 package in 1.685s
found 0 vulnerabilities


C:\webtest\test>type package.json
{
  "name": "testkim",
  "version": "1.0.0",
  "description": "configuration test",
  "main": "index.js",
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "keywords": [
    "install"
  ],
  "author": "lys",
  "license": "ISC",
====================
  "dependencies": {
    "jquery": "^3.5.0" => 설치된 최신버전 
  }
=====================>설치할때 마다 기록이 된다.
}

C:\webtest\2.react\test>
}
=>yarn 프로그램을 다운로드할때 사용

1.yarn설치 필수=>리액트도 서버를 가동시킬때 사용하기때문에 

C:\webtest\2.react\test>cd ..

C:\webtest\2.react>npm install -g yarn

C:\webtest\2.react>npm install -g yarn
added 1 package, and audited 2 packages in 709ms

found 0 vulnerabilities

C:\webtest\2.react>
C:\webtest\2.react>npm install -g create-react-app@3.0.1
                               =======
                               <->uninstall

C:\webtest\2.react>npm install -g create-react-app@3.4.1 =>리액트의 자동화툴

C:\Users\kitcoop\AppData\Roaming\npm\create-react-app -> C:\Users\kitcoop\AppData\Roaming\npm\node_modules\create-react-app\index.js
+ create-react-app@3.4.1
added 91 packages from 45 contributors in 13.849s

***************************************************************
최신버전을 설치한 경우(2020.5.2 설치한 경우임)

C:\webtest\2.react>npm install -g create-react-app@3.4.1

C:\Users\testkim\AppData\Roaming\npm\create-react-app -> C:\Users\testkim\AppData\Roaming\npm\node_modules\create-react-app\index.js
+ create-react-app@3.4.1<===3.0.1에서 버전업 =>만약에 3.4.1에서 문제가 발생하면 지우고
                                                  다시 버전 3.0.1버전에서 설치할 것.
==================================================
npm WARN deprecated tar@2.2.2: This version of tar is no longer supported, and will not receive security updates. Please upgrade asap.

added 97 packages, and audited 98 packages in 14s

6 packages are looking for funding
  run `npm fund` for details

2 high severity vulnerabilities

Some issues need review, and may require choosing
a different dependency.

Run `npm audit` for details.
**********************************************************
 2.react>npm uninstall -g create-react-app@3.4.1  =>4.0.0 버전으로 설치(맥)

           You can fix this by running 
             npm uninstall -g create-react-app or 
             yarn global remove create-react-app before using create-react-app again.


 2.react>create-react-app myapp2

 ...
  cd myapp2
  yarn start

 맥os 권한부분 해결하는 방법=>권한에러

https://hidelryn.github.io/2019/08/17/etc-npm-yarn-permission-err/

**********************************************************
  webtest\test>npm init ->package.json을 만들어주는 프로그램실행명령어
                    ~
                   >npm install jquery=>
                   >type package.json=>설치된 jquery파일이 기록이 되는지를 확인

***********************************************************
프로젝트를 생성시키는 방법->create-react-app 프로젝트명(myapp)
***************************************************************

C:\webtest\2.react>create-react-app myapp
======================전의 버전===========
├─ react-dom@16.11.0
├─ react-scripts@3.2.0
└─ react@16.11.0
=====================================

C:\webtest\2.react>create-react-app myapp

Creating a new React app in C:\webtest\2.react\myapp.

Installing packages. This might take a couple of minutes.
Installing react, react-dom, and react-scripts with cra-template...

yarn add v1.22.4
[1/4] Resolving packages...
[2/4] Fetching packages...
info fsevents@1.2.12: The platform "win32" is incompatible with this module.
info "fsevents@1.2.12" is an optional dependency and failed compatibility check. Excluding it from installation.
info fsevents@2.1.2: The platform "win32" is incompatible with this module.
info "fsevents@2.1.2" is an optional dependency and failed compatibility check. Excluding it from installation.
[3/4] Linking dependencies...
warning "react-scripts > @typescript-eslint/eslint-plugin > tsutils@3.17.1" has unmet peer dependency "typescript@>=2.8.0 || >= 3.2.0-dev || >= 3.3.0-dev || >= 3.4.0-dev || >= 3.5.0-dev || >= 3.6.0-dev || >= 3.6.0-beta || >= 3.7.0-dev || >= 3.7.0-beta".
[4/4] Building fresh packages...
success Saved lockfile.
success Saved 13 new dependencies.
info Direct dependencies
├─ cra-template@1.0.3 ==>새로 추가된 라이브러리 
├─ react-dom@16.13.1
├─ react-scripts@3.4.1
└─ react@16.13.1
=====================>새로 업그레이드 된 버전
info All dependencies
├─ @babel/plugin-transform-flow-strip-types@7.9.0
├─ @babel/plugin-transform-runtime@7.9.0
├─ @babel/plugin-transform-typescript@7.9.6
├─ @babel/preset-typescript@7.9.0
├─ babel-preset-react-app@9.1.2
├─ cra-template@1.0.3
├─ eslint-config-react-app@5.2.1
├─ react-dev-utils@10.2.1
├─ react-dom@16.13.1
├─ react-error-overlay@6.0.7
├─ react-scripts@3.4.1
├─ react@16.13.1
└─ scheduler@0.19.1
Done in 202.07s.
Git repo not initialized { Error: Command failed: git --version
    at checkExecSyncError (child_process.js:639:11)
    at execSync (child_process.js:676:15)
    at tryGitInit (C:\webtest\2.react\myapp\node_modules\react-scripts\scripts\init.js:46:5)
    at module.exports (C:\webtest\2.react\myapp\node_modules\react-scripts\scripts\init.js:266:7)
    at [eval]:3:14
    at Script.runInThisContext (vm.js:124:20)
    at Object.runInThisContext (vm.js:314:38)
    at Object.<anonymous> ([eval]-wrapper:9:26)
    at Module._compile (internal/modules/cjs/loader.js:816:30)
    at evalScript (internal/process/execution.js:60:25)
  status: 1,
  signal: null,
  output: [ null, null, null ],
  pid: 6188,
  stdout: null,
  stderr: null }

Installing template dependencies using yarnpkg...
info fsevents@2.1.2: The platform "win32" is incompatible with this module.ackages...
info "fsevents@2.1.2" is an optional dependency and failed compatibility check. Excluding it from installation.
info fsevents@1.2.12: The platform "win32" is incompatible with this module.
info "fsevents@1.2.12" is an optional dependency and failed compatibility check. Excluding it from installation.
[3/4] Linking dependencies...
warning "react-scripts > @typescript-eslint/eslint-plugin > tsutils@3.17.1" has unmet peer dependency "typescript@>=2.8.0 || >= 3.2.0-dev || >= 3.3.0-dev || >= 3.4.0-dev || >= 3.5.0-dev || >= 3.6.0-dev || >= 3.6.0-beta || >= 3.7.0-dev || >= 3.7.0-beta".
warning " > @testing-library/user-event@7.2.1" has unmet peer dependency "@testing-library/dom@>=5".
[4/4] Building fresh packages...

success Saved lockfile.
success Saved 20 new dependencies.
info Direct dependencies
├─ @testing-library/jest-dom@4.2.4
├─ @testing-library/react@9.5.0
├─ @testing-library/user-event@7.2.1
├─ react-dom@16.13.1
└─ react@16.13.1
info All dependencies
├─ @babel/runtime-corejs3@7.9.6
├─ @sheerun/mutationobserver-shim@0.3.3
├─ @testing-library/dom@6.16.0
├─ @testing-library/jest-dom@4.2.4
├─ @testing-library/react@9.5.0
├─ @testing-library/user-event@7.2.1
├─ @types/prop-types@15.7.3
├─ @types/react-dom@16.9.7
├─ @types/react@16.9.34
├─ @types/testing-library__dom@7.0.2
├─ @types/testing-library__react@9.1.3
├─ css.escape@1.5.1
├─ csstype@2.6.10
├─ dom-accessibility-api@0.3.0
├─ min-indent@1.0.0
├─ react-dom@16.13.1
├─ react@16.13.1
├─ redent@3.0.0
├─ strip-indent@3.0.0
└─ wait-for-expect@3.0.2
Done in 42.39s.
Removing template package using yarnpkg...

yarn remove v1.22.4
[1/2] Removing module cra-template...
[2/2] Regenerating lockfile and installing missing dependencies...
info fsevents@2.1.2: The platform "win32" is incompatible with this module.
info "fsevents@2.1.2" is an optional dependency and failed compatibility check. Excluding it from installation.
info fsevents@1.2.12: The platform "win32" is incompatible with this module.
info "fsevents@1.2.12" is an optional dependency and failed compatibility check. Excluding it from installation.
warning " > @testing-library/user-event@7.2.1" has unmet peer dependency "@testing-library/dom@>=5".
warning "react-scripts > @typescript-eslint/eslint-plugin > tsutils@3.17.1" has unmet peer dependency "typescript@>=2.8.0 || >= 3.2.0-dev || >= 3.3.0-dev || >= 3.4.0-dev || >= 3.5.0-dev || >= 3.6.0-dev || >= 3.6.0-beta || >= 3.7.0-dev || >= 3.7.0-beta".
success Uninstalled packages.
Done in 35.38s.

Success! Created myapp at C:\webtest\2.react\myapp
Inside that directory, you can run several commands:

  yarn start ->서버 가동시킬때
    Starts the development server.

  yarn build ->배포할때
    Bundles the app into static files for production.

  yarn test ->테스트 서버를 실행
    Starts the test runner.

  yarn eject ->수동으로 환경설정을 전환->자동으로 전환X
    Removes this tool and copies build dependencies, configuration files
    and scripts into the app directory. If you do this, you can’t go back!

We suggest that you begin by typing:

  cd myapp
  yarn start

Compiled successfully!

You can now view myapp in the browser.

  Local:            http://localhost:3000
  On Your Network:  http://192.168.35.15:3000

Note that the development build is not optimized.
To create a production build, use yarn build.

==================================
yarn run v1.19.1\3.React>cd myapp
$ react-scripts start
C:\webtest\2.react\myapp>yarn start
Starting the development server...

Browserslist: caniuse-lite is outdated. Please run next command `yarn upgrade`
Compiled successfully!

You can now view myapp in the browser.

  Local:            http://localhost:3000/
  On Your Network:  http://192.168.0.35:3000/

Note that the development build is not optimized.
To create a production build, use yarn build.

 서버를 두번 실행시키는 경우가 발생 ->3000, 3001,3002
Would you like to run the app on another port instead? » (Y/n)
ctrl+c

 >
=================================================

**웹상에서의 실행할 경우(리액트) **

<!-- 1.라이브러리 지정(cdn)(react,react-dom),babel 필요(es6 언어를 지원해주는 라이브러리사용) -->
<script src="https://unpkg.com/react@15/dist/react.min.js"></script>
<script src="https://unpkg.com/react-dom@15/dist/react-dom.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/babel-core/5.8.38/browser.min.js"></script>


--------------------------------reacttemplate.html파일 작성해서 확인------------------------
<!DOCTYPE html>
<html>
<head>
<meta charset="UTF-8">
<!-- 1.라이브러리(cdn)  -->
<script src="https://unpkg.com/react@15/dist/react.min.js"></script>
<script src="https://unpkg.com/react-dom@15/dist/react-dom.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/babel-core/5.8.38/browser.min.js"></script>

<title>리액트예제</title>
</head>
<body>
  <!-- public/index.html 2.화면디자인한 내용을 어디에 배치(출력부분지정) -->
  <div id="root"></div>
  
  <!-- 3.화면디자인(컴포넌트를 생성->등록)(text/babel)로 작성(es6 사용가능) src/index.js -->
  <script type="text/babel">
    ReactDOM.render(<h1>Hello,React!!!</h1>,document.getElementById('root'))
  </script>
</body>
</html>
******************************************************************
**** 리액트 프로그램의 구조 *****

   myapp =>** Chrome에서 실행을 시켜야 된다.=>IE에서는 실행이 안된다.(메인 페이지가 보이지 않는다.)
                        Edge을 사용                                        X
      |
       -node_modules->프로젝트와 관련된 라이브러리(=모듈) 다 설치(다운로드)
      |              (1)
       -public->index.html=>http://localhost:3000/->리액트
                          앵귤러-><body>
                                      ================
                                      <app-root></app-root> =>부모컴포넌트
                                      ===============
                                     </body>

                          리액트
                             <body>
                              <div id="root"><컴포넌트명 /></div>
                             </body>            =======>실행시켜주면서 자동 등록


  2. src/index.js=>작성된 컴포넌트들을 모두 불러와서 결합시켜서 화면에 출력(소스코드)
          /App.css->css파일 따로 작성
           ~

import React from 'react'; //react모듈->컴포넌트에 대한 정보들
import ReactDOM from 'react-dom';//실시간으로 화면에 출력시켜주기
//-------------------------------  위해서 필요(react-dom 모듈)
//import './index.css';  //import '경로포함해서 스타일 시트파일명'
//-----------------------------
import App from './components/App';    //불러올 컴포넌트명
//형식) import 불러올 클래스명 또는 함수명 from '경로 포함해서 불러올파일명'
//-----------------------------
//import * as serviceWorker from './serviceWorker';

//동적으로 웹상에 출력시켜주는 문장(1.부착시킬컴포넌트명 2.부착위치)
ReactDOM.render(<App />, document.getElementById('root'));
=========================================
 최신버전에서는 이 부분이 변경이 있다.

/*
ReactDOM.render(
  <React.StrictMode>
    <App />
  </React.StrictMode>,
  document.getElementById('root')
);
*/

=========================================
  3.src/components/App.js =>화면에 부착시킬 컴포넌트 작성

   //App.js
//import React from 'react'; //React.Component클래스가 존재 (1)
import React,{Component} from 'react';//(2)
import ReactDOM from 'react-dom';//실시간으로 화면에 출력시켜주기위해서
//import './App.css'; 스타일시트 필요

//class App extends React.Component{  //(1)생명주기함수->render()
class App extends Component{ //(2)

  //화면에 출력시켜주기위해서 필요로하는 Component함수
  render(){
     return(<h1>리액트 구조 및 환경설정파일확인</h1>)
  }
}

export default App;

  *** 리액트의 기본문법 ****

 기본 프로젝트용 템플레이트->복사->이름만 변경하는 걸로 작업

1.pulic /index.html 만 존재=>다 삭제
2.src/index.js, App.js ,App.css
  =>src/components/App.js =>컴포넌트만 따로 저장이 가능

3.App.js 파일의 내용을 클래스로 작성=>실행이 된것을 확인
 =>myback  프로젝트로 복사 해놓을것.

==========================================

******JSX(JavaScript Expression)문법 ****************=>3장

1.반드시 화면에 데이터를 출력할때에는 하나의 태그를 사용해야 한다.(규칙)=>부모태그
  =>하나의 태그로 묶어줘야 된다.

2.변수를 선언=>화면에 변수의 값출력=>형식) let 변수명=값 =>{변수명}
                                           angular=>{{변수명}}

                                           Vue.js=>{{변수명}}=>angular,react장점
=============================================
3.이벤트 처리함수는 어떻게 선언하고 호출하는가?=>클래스 내부에서 작성

 <button onclick={this.sayHello()}>Click me</button>
                           형식) {this.호출할함수명()}
                                                         =>함수호출하라  =>() (X) -> 화면보다 함수를 먼저 호출한다
                                                         =>함수명앞에 this를 붙여야 된다.
                              클래스 내부->속성,함수를 가리킬때 앞에 this를 붙이기 때문에
            onclick(X) =>onClick=>on이벤트종류(첫글자는 반드시 대문자를 사용할것)
            =========================================

4.리액트에서 스타일시트를 적용시키는 방법 2가지

**1)스타일시트가 복잡->css파일을 만들어서 import로 불러온다. =>프로젝트(bootstrap불러오기)
    2)스타일시트가 적용이 된 camelCase Object=> let 객체명={속성명:속성값~}

C:\webtest\2.react>

====================================================



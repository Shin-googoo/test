
1. go메서드의 (1)을 try~catch 구문으로 작성해서 다음과 같은 에러메세지를 출력할 수 있도록 소스코드를
    변경하시오.(1-1)

public class HelloTest3 {

	public static void main(String[] args)  {
		// TODO Auto-generated method stub
		HelloTest2 ht=new HelloTest2();
		ht.go();
	}
	public void go() throws ArrayIndexOutOfBoundsException {
                                    ------------------------------------------------ (1)
		int i=0;
	       String greetings[]= {"객체형변환","예외처리","예외처리방법"};
	       while(i<4) { 
	    	  System.out.println(greetings[i]);
	    	  i++;
	       }
	}
}


<<실행결과>>

객체형변환
예외처리
예외처리방법
배열첨자의 계산이 잘못되었습니다.
java.lang.ArrayIndexOutOfBoundsException: Index 3 out of bounds for length 3
	at j1214.HelloTest3.go(HelloTest3.java:18)
	at j1214.HelloTest3.main(HelloTest3.java:9)


정답)
   public class HelloTest3 {
     //Exception
	public static void main(String[] args) {
		// TODO Auto-generated method stub
		   HelloTest3 ht=new HelloTest3();
		   ht.go();
	}
	
	public void go(){
		
		  int i=0;//첨자                 0            1             2
                    try {
		  String greetings[]= {"객체형변환","예외처리","예외처리방법"};
	       while(i<4) {//(3<4)
	    	   System.out.println(greetings[i]);//greetings[3]
	    	   i++; 
	      }//while
		  }catch(ArrayIndexOutOfBoundsException e) {
			   System.out.println("배열첨자의 계산이 잘못되었습니다.");
			   e.printStackTrace();
		   }
	}
}
---------------------------------------------------------------------------------------------------

2.  c:\webtest\3.java\readme.txt파일을 불러올 수 있도록 소스코드 작성할것(1-2)

import java.io.*;

public class FileInputTest {

       public static void main(String[] args) throws Exception {
       
        ------------------------------------------------------------ 
                    =>파일의 내용을 불러올수 있도록 소스코드를 작성하시오.
        ------------------------------------------------------------
        int read=0;//파일의 내용을 저장할 임시변수
     
        while(true) {
        	read=fis.read();
        	if(read==-1) break;//파일의 끝에 도달하면 더이상 출력X
        	System.out.write(read);
        } 
    }
}

<<실행결과>>
 파일을 못불러왔을때의 에러메세지 (참조할것)
Exception in thread "main" java.io.FileNotFoundException: C:\webtest\3.java\readme2.txt (지정된 파일을 찾을 수 없습니다)
	at java.base/java.io.FileInputStream.open0(Native Method)
	at java.base/java.io.FileInputStream.open(FileInputStream.java:216)
	at java.base/java.io.FileInputStream.<init>(FileInputStream.java:157)
	at java.base/java.io.FileInputStream.<init>(FileInputStream.java:111)
	at j1215.FileInputTest.main(FileInputTest.java:13)
   
  =>정답)  FileInputStream fis=
              new FileInputStream("C:/webtest/3.java/readme2.txt");
  
3.다음과 같이 출력되는 프로그램을 작성하시오.(ArrayListTest.java로 저장할것)(2-1)

   조건1) ArrayList 을 이용할것.
   조건2) 문자열만 받을 수 있는 제너릭을 줄것.

 <<실행결과>>
  list.size()=>3
  오렌지
  딸기
  복숭아

 =>정답)

import java.util.*;

public class ArrayListTest {

	public static void main(String[] args) {
		
        ArrayList<String> list=new ArrayList<String>();
		
        list.add("포도");//0->"오렌지"
        list.add("딸기");//1
        //키위->2
        list.add("복숭아");//2->3
        //add(삽입할 위치,저장할 객체명)
        list.add(2,"키위");
        //수정=>set(수정할 위치,수정할값)
        list.set(0,"오렌지");
        //삭제->remove(삭제할 데이터명) or 
        //        remove(인덱스번호)=>중복된 데이터를 구분해서 삭제할때
        list.remove("키위");//list.remove(2);
        //조회->get(인덱스번호)
        System.out.println("list.size()=>"+list.size());
        for(int i=0;i<list.size();i++) {
        	System.out.println(list.get(i));
        }
    }
}

  
4.다음 밑줄친 부분에 실행결과와 같이 출력되도록 출력시켜주는 소스코드 구문을 완성시키시오.(2-2)

public class ThreadTest {
	public static void main(String[] args) {
		// TODO Auto-generated method stub
  
                           ------------------------------------------------------------
                             =>현재 실행중인 쓰레드의 이름을 구해주는 소스코드를 작성할것.         
		------------------------------------------------------------
		System.out.println(Thread.currentThread().getId());
		
		while(true) {//무한루프=>쓰레드의 한 부분
			System.out.println("main Thread 실행중...");
		}
	}

}

<<실행결과>>
  main
   1

  정답) =>System.out.println(Thread.currentThread().getName());

5. 다음의 실행결과가 나올수 있도록 소스코드의 밑줄친 부분을 작성하시오.(2-3)

public class BoxingTest {

      public static void main(String[] args) {
		
        System.out.println("자동 unboxing");
        ----------------------------------------
                                                       =>10을 저장시켜주는 Wrapper클래스를 작성할것.
        -------------------------------------
        int sum=obj+20;
        System.out.println("sum=>"+sum);
      }	
}

<실행결과>
자동 unboxing
sum=>30


<정답>
 Integer obj=new Integer(10); 

